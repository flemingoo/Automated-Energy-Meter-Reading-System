

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Mon Nov 30 13:01:40 2015

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text914,local,class=CODE,delta=2
    14                           	psect	text916,local,class=CODE,delta=2
    15                           	psect	text922,local,class=CODE,delta=2
    16                           	psect	text923,local,class=CODE,delta=2
    17                           	psect	text924,local,class=CODE,delta=2
    18                           	psect	text937,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text938,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     
    24                           	psect	idataBANK0
    25  0000                     __pidataBANK0:	
    26  0006                     _PORTB	set	6
    27  0008                     _PORTD	set	8
    28  0013                     _SSPBUF	set	19
    29  0014                     _SSPCON	set	20
    30  0019                     _TXREG	set	25
    31  00C4                     _CREN	set	196
    32  005F                     _GIE	set	95
    33  0034                     _RB4	set	52
    34  005B                     _RBIE	set	91
    35  0058                     _RBIF	set	88
    36  0039                     _RC1	set	57
    37  003A                     _RC2	set	58
    38  00C7                     _SPEN	set	199
    39  0063                     _SSPIF	set	99
    40  0099                     _SPBRG	set	153
    41  0093                     _SSPADD	set	147
    42  0094                     _SSPSTAT	set	148
    43  0086                     _TRISB	set	134
    44  0088                     _TRISD	set	136
    45  048D                     _ACKDT	set	1165
    46  048C                     _ACKEN	set	1164
    47  048E                     _ACKSTAT	set	1166
    48  04C2                     _BRGH	set	1218
    49  048A                     _PEN	set	1162
    50  048B                     _RCEN	set	1163
    51  0489                     _RSEN	set	1161
    52  0488                     _SEN	set	1160
    53  04C4                     _SYNC	set	1220
    54  0439                     _TRISC1	set	1081
    55  043A                     _TRISC2	set	1082
    56  043B                     _TRISC3	set	1083
    57  043C                     _TRISC4	set	1084
    58  043E                     _TRISC6	set	1086
    59  043F                     _TRISC7	set	1087
    60  04C1                     _TRMT	set	1217
    61  04C5                     _TXEN	set	1221
    62                           
    63                           	psect	strings
    64  0502                     __pstrings:	
    65  0502                     stringtab:	
    66                           ;	global	stringdir,stringtab,__stringbase
    67                           
    68                           
    69                           ;	String table - string pointers are 1 byte each
    70  0502  1BFF               	btfsc	btemp+1,7
    71  0503  2D0C               	ljmp	stringcode
    72  0504  1383               	bcf	3,7
    73  0505  187F               	btfsc	btemp+1,0
    74  0506  1783               	bsf	3,7
    75  0507  0800               	movf	0,w
    76  0508  0A84               	incf	4,f
    77  0509  1903               	skipnz
    78  050A  0AFF               	incf	btemp+1,f
    79  050B  0008               	return
    80  050C                     stringcode:	
    81  050C                     stringdir:	
    82  050C  3005               	movlw	high stringdir
    83  050D  008A               	movwf	10
    84  050E  0804               	movf	4,w
    85  050F  0A84               	incf	4,f
    86  0510  0782               	addwf	2,f
    87  0511                     __stringbase:	
    88  0511  3400               	retlw	0
    89  0512                     STR_2:	
    90  0512  3443               	retlw	67	;'C'
    91  0513  3455               	retlw	85	;'U'
    92  0514  3453               	retlw	83	;'S'
    93  0515  3454               	retlw	84	;'T'
    94  0516  344F               	retlw	79	;'O'
    95  0517  344D               	retlw	77	;'M'
    96  0518  3445               	retlw	69	;'E'
    97  0519  3452               	retlw	82	;'R'
    98  051A  3449               	retlw	73	;'I'
    99  051B  3444               	retlw	68	;'D'
   100  051C  3420               	retlw	32	;' '
   101  051D  3439               	retlw	57	;'9'
   102  051E  3434               	retlw	52	;'4'
   103  051F  3430               	retlw	48	;'0'
   104  0520  3430               	retlw	48	;'0'
   105  0521  3435               	retlw	53	;'5'
   106  0522  3435               	retlw	53	;'5'
   107  0523  3437               	retlw	55	;'7'
   108  0524  3434               	retlw	52	;'4'
   109  0525  3439               	retlw	57	;'9'
   110  0526  3437               	retlw	55	;'7'
   111  0527  3420               	retlw	32	;' '
   112  0528  3443               	retlw	67	;'C'
   113  0529  344F               	retlw	79	;'O'
   114  052A  3455               	retlw	85	;'U'
   115  052B  344E               	retlw	78	;'N'
   116  052C  3454               	retlw	84	;'T'
   117  052D  3420               	retlw	32	;' '
   118  052E  3400               	retlw	0
   119  052F                     STR_1:	
   120  052F  3441               	retlw	65	;'A'
   121  0530  3454               	retlw	84	;'T'
   122  0531  342B               	retlw	43	;'+'
   123  0532  3443               	retlw	67	;'C'
   124  0533  344D               	retlw	77	;'M'
   125  0534  3447               	retlw	71	;'G'
   126  0535  3453               	retlw	83	;'S'
   127  0536  343D               	retlw	61	;'='
   128  0537  3422               	retlw	34	;'"'
   129  0538  342B               	retlw	43	;'+'
   130  0539  3439               	retlw	57	;'9'
   131  053A  3431               	retlw	49	;'1'
   132  053B  3438               	retlw	56	;'8'
   133  053C  3434               	retlw	52	;'4'
   134  053D  3432               	retlw	50	;'2'
   135  053E  3438               	retlw	56	;'8'
   136  053F  3430               	retlw	48	;'0'
   137  0540  3439               	retlw	57	;'9'
   138  0541  3439               	retlw	57	;'9'
   139  0542  3434               	retlw	52	;'4'
   140  0543  3436               	retlw	54	;'6'
   141  0544  3438               	retlw	56	;'8'
   142  0545  3422               	retlw	34	;'"'
   143  0546  3400               	retlw	0
   144  0547                     STR_12:	
   145  0547  343F               	retlw	63	;'?'
   146  0548  343F               	retlw	63	;'?'
   147  0549  343F               	retlw	63	;'?'
   148  054A  3400               	retlw	0
   149  054B                     STR_7:	
   150  054B  3457               	retlw	87	;'W'
   151  054C  3445               	retlw	69	;'E'
   152  054D  3444               	retlw	68	;'D'
   153  054E  3400               	retlw	0
   154  054F                     STR_6:	
   155  054F  3454               	retlw	84	;'T'
   156  0550  3455               	retlw	85	;'U'
   157  0551  3445               	retlw	69	;'E'
   158  0552  3400               	retlw	0
   159  0553                     STR_9:	
   160  0553  3446               	retlw	70	;'F'
   161  0554  3452               	retlw	82	;'R'
   162  0555  3449               	retlw	73	;'I'
   163  0556  3400               	retlw	0
   164  0557                     STR_5:	
   165  0557  344D               	retlw	77	;'M'
   166  0558  344F               	retlw	79	;'O'
   167  0559  344E               	retlw	78	;'N'
   168  055A  3400               	retlw	0
   169  055B                     STR_11:	
   170  055B  3453               	retlw	83	;'S'
   171  055C  3455               	retlw	85	;'U'
   172  055D  344E               	retlw	78	;'N'
   173  055E  3400               	retlw	0
   174  055F                     STR_10:	
   175  055F  3453               	retlw	83	;'S'
   176  0560  3441               	retlw	65	;'A'
   177  0561  3454               	retlw	84	;'T'
   178  0562  3400               	retlw	0
   179  0563                     STR_8:	
   180  0563  3454               	retlw	84	;'T'
   181  0564  3448               	retlw	72	;'H'
   182  0565  3455               	retlw	85	;'U'
   183  0566  3400               	retlw	0
   184  0567                     STR_3:	
   185  0567  3441               	retlw	65	;'A'
   186  0568  344D               	retlw	77	;'M'
   187  0569  3400               	retlw	0
   188  056A                     STR_4:	
   189  056A  3450               	retlw	80	;'P'
   190  056B  344D               	retlw	77	;'M'
   191  056C  3400               	retlw	0
   192                           
   193                           	psect	cinit
   194  056D                     start_initialization:	
   195  056D  3050               	movlw	80
   196                           
   197                           ; Clear objects allocated to COMMON
   198  056E  01FB               	clrf	__pbssCOMMON& (0+127)
   199                           
   200                           ; Clear objects allocated to BANK0
   201  056F  01D4               	clrf	__pbssBANK0& (0+127)
   202  0570  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   203  0571  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   204  0572  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   205  0573  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   206  0574  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   207  0575  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   208  0576  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   209  0577  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   210                           
   211                           ;initializer for _b
   212  0578  00A0               	movwf	__pdataBANK0& (0+127)
   213  0579  3055               	movlw	85
   214  057A  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   215  057B  304C               	movlw	76
   216  057C  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   217  057D  3053               	movlw	83
   218  057E  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   219  057F  3045               	movlw	69
   220  0580  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   221  0581  303A               	movlw	58
   222  0582  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   223  0583  302D               	movlw	45
   224  0584  01A6               	clrf	(__pdataBANK0+6)& (0+127)
   225                           
   226                           ;initializer for _a
   227  0585  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   228  0586  303C               	movlw	60
   229  0587  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   230  0588  302A               	movlw	42
   231  0589  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   232  058A  3020               	movlw	32
   233  058B  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   234  058C  304D               	movlw	77
   235  058D  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   236  058E  3045               	movlw	69
   237  058F  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   238  0590  3054               	movlw	84
   239  0591  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   240  0592  3045               	movlw	69
   241  0593  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   242  0594  3052               	movlw	82
   243  0595  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   244  0596  3020               	movlw	32
   245  0597  00B0               	movwf	(__pdataBANK0+16)& (0+127)
   246  0598  3053               	movlw	83
   247  0599  00B1               	movwf	(__pdataBANK0+17)& (0+127)
   248  059A  3059               	movlw	89
   249  059B  00B2               	movwf	(__pdataBANK0+18)& (0+127)
   250  059C  3053               	movlw	83
   251  059D  00B3               	movwf	(__pdataBANK0+19)& (0+127)
   252  059E  3054               	movlw	84
   253  059F  00B4               	movwf	(__pdataBANK0+20)& (0+127)
   254  05A0  3045               	movlw	69
   255  05A1  00B5               	movwf	(__pdataBANK0+21)& (0+127)
   256  05A2  304D               	movlw	77
   257  05A3  00B6               	movwf	(__pdataBANK0+22)& (0+127)
   258  05A4  3020               	movlw	32
   259  05A5  00B7               	movwf	(__pdataBANK0+23)& (0+127)
   260  05A6  302A               	movlw	42
   261  05A7  00B8               	movwf	(__pdataBANK0+24)& (0+127)
   262  05A8  303E               	movlw	62
   263  05A9  00B9               	movwf	(__pdataBANK0+25)& (0+127)
   264  05AA  302D               	movlw	45
   265  05AB  00BA               	movwf	(__pdataBANK0+26)& (0+127)
   266  05AC  01BB               	clrf	(__pdataBANK0+27)& (0+127)
   267  05AD                     end_of_initialization:	
   268                           ;End of C runtime variable initialization code
   269                           
   270  05AD  0183               	clrf	3
   271  05AE  120A  118A  2C40   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMMON
   274  007B                     __pbssCOMMON:	
   275  007B                     _Temp:	
   276  007B                     	ds	1
   277                           
   278                           	psect	bssBANK0
   279  0054                     __pbssBANK0:	
   280  0054                     _count:	
   281  0054                     	ds	2
   282  0056                     _i:	
   283  0056                     	ds	2
   284  0058                     _count_ch:	
   285  0058                     	ds	1
   286  0059                     _pRTCArray:	
   287  0059                     	ds	4
   288                           
   289                           	psect	dataBANK0
   290  0020                     __pdataBANK0:	
   291  0020                     _b:	
   292  0020                     	ds	7
   293  0027                     _a:	
   294  0027                     	ds	21
   295                           
   296                           	psect	cstackCOMMON
   297  0070                     __pcstackCOMMON:	
   298  0070                     ?_InitLCD:	
   299  0070                     ?_InitI2C:	
   300                           ; 0 bytes @ 0x0
   301                           
   302  0070                     ?_lcdClr:	
   303                           ; 0 bytes @ 0x0
   304                           
   305  0070                     ?_lcdCmd:	
   306                           ; 0 bytes @ 0x0
   307                           
   308  0070                     ?_lcdData:	
   309                           ; 0 bytes @ 0x0
   310                           
   311  0070                     ?_DisplayDateOnLCD:	
   312                           ; 0 bytes @ 0x0
   313                           
   314  0070                     ?_I2C_Start:	
   315                           ; 0 bytes @ 0x0
   316                           
   317  0070                     ?_I2C_Write_Byte:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_I2C_Stop:	
   321                           ; 1 bit 
   322                           
   323  0070                     ?_I2C_ReStart:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_I2C_Send_NACK:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_I2C_Send_ACK:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_UART_Write:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_UART_Write_Text:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_isr:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ??_isr:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_ToggleEpinOfLCD:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?_DisplayTimeToLCD:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?_Get_DS1307_RTC_Time:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_Get_DS1307_RTC_Date:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_I2C_Read_Byte:	
   360                           ; 1 bytes @ 0x0
   361                           
   362                           
   363                           ; 1 bytes @ 0x0
   364  0070                     	ds	2
   365  0072                     ??_InitI2C:	
   366  0072                     ??_I2C_Start:	
   367                           ; 0 bytes @ 0x2
   368                           
   369  0072                     ??_I2C_Write_Byte:	
   370                           ; 0 bytes @ 0x2
   371                           
   372  0072                     ??_I2C_Stop:	
   373                           ; 0 bytes @ 0x2
   374                           
   375  0072                     ??_I2C_ReStart:	
   376                           ; 0 bytes @ 0x2
   377                           
   378  0072                     ??_I2C_Read_Byte:	
   379                           ; 0 bytes @ 0x2
   380                           
   381  0072                     ??_I2C_Send_NACK:	
   382                           ; 0 bytes @ 0x2
   383                           
   384  0072                     ??_I2C_Send_ACK:	
   385                           ; 0 bytes @ 0x2
   386                           
   387  0072                     ??_UART_Write:	
   388                           ; 0 bytes @ 0x2
   389                           
   390  0072                     ??_ToggleEpinOfLCD:	
   391                           ; 0 bytes @ 0x2
   392                           
   393  0072                     ?___bmul:	
   394                           ; 0 bytes @ 0x2
   395                           
   396  0072                     ?___lbdiv:	
   397                           ; 1 bytes @ 0x2
   398                           
   399  0072                     ?___lbmod:	
   400                           ; 1 bytes @ 0x2
   401                           
   402  0072                     ?___aldiv:	
   403                           ; 1 bytes @ 0x2
   404                           
   405  0072                     UART_Write@data:	
   406                           ; 4 bytes @ 0x2
   407                           
   408  0072                     I2C_Write_Byte@Byte:	
   409                           ; 1 bytes @ 0x2
   410                           
   411  0072                     ___bmul@multiplicand:	
   412                           ; 1 bytes @ 0x2
   413                           
   414  0072                     ___lbdiv@divisor:	
   415                           ; 1 bytes @ 0x2
   416                           
   417  0072                     ___lbmod@divisor:	
   418                           ; 1 bytes @ 0x2
   419                           
   420  0072                     ___aldiv@divisor:	
   421                           ; 1 bytes @ 0x2
   422                           
   423                           
   424                           ; 4 bytes @ 0x2
   425  0072                     	ds	1
   426  0073                     ??_lcdCmd:	
   427  0073                     ??_lcdData:	
   428                           ; 0 bytes @ 0x3
   429                           
   430  0073                     ??_UART_Write_Text:	
   431                           ; 0 bytes @ 0x3
   432                           
   433  0073                     ?_Read_Bytes_From_DS1307_RTC:	
   434                           ; 0 bytes @ 0x3
   435                           
   436  0073                     ??___bmul:	
   437                           ; 0 bytes @ 0x3
   438                           
   439  0073                     ??___lbdiv:	
   440                           ; 0 bytes @ 0x3
   441                           
   442  0073                     ??___lbmod:	
   443                           ; 0 bytes @ 0x3
   444                           
   445  0073                     UART_Write_Text@text:	
   446                           ; 0 bytes @ 0x3
   447                           
   448  0073                     Read_Bytes_From_DS1307_RTC@pData:	
   449                           ; 1 bytes @ 0x3
   450                           
   451  0073                     lcdCmd@cmdout:	
   452                           ; 1 bytes @ 0x3
   453                           
   454  0073                     lcdData@dataout:	
   455                           ; 1 bytes @ 0x3
   456                           
   457  0073                     ___bmul@product:	
   458                           ; 1 bytes @ 0x3
   459                           
   460  0073                     ___lbdiv@dividend:	
   461                           ; 1 bytes @ 0x3
   462                           
   463                           
   464                           ; 1 bytes @ 0x3
   465  0073                     	ds	1
   466  0074                     ??_InitLCD:	
   467  0074                     ??_lcdClr:	
   468                           ; 0 bytes @ 0x4
   469                           
   470  0074                     ?_lcdString:	
   471                           ; 0 bytes @ 0x4
   472                           
   473  0074                     ___bmul@multiplier:	
   474                           ; 0 bytes @ 0x4
   475                           
   476  0074                     ___lbdiv@counter:	
   477                           ; 1 bytes @ 0x4
   478                           
   479  0074                     ___lbmod@dividend:	
   480                           ; 1 bytes @ 0x4
   481                           
   482  0074                     UART_Write_Text@i:	
   483                           ; 1 bytes @ 0x4
   484                           
   485  0074                     Read_Bytes_From_DS1307_RTC@NoOfBytes:	
   486                           ; 2 bytes @ 0x4
   487                           
   488  0074                     lcdString@d:	
   489                           ; 2 bytes @ 0x4
   490                           
   491                           
   492                           ; 2 bytes @ 0x4
   493  0074                     	ds	1
   494  0075                     ___lbdiv@quotient:	
   495  0075                     ___lbmod@counter:	
   496                           ; 1 bytes @ 0x5
   497                           
   498                           
   499                           ; 1 bytes @ 0x5
   500  0075                     	ds	1
   501  0076                     ??_lcdString:	
   502  0076                     ??_Read_Bytes_From_DS1307_RTC:	
   503                           ; 0 bytes @ 0x6
   504                           
   505  0076                     ___lbmod@rem:	
   506                           ; 0 bytes @ 0x6
   507                           
   508  0076                     lcdString@i:	
   509                           ; 1 bytes @ 0x6
   510                           
   511  0076                     ___aldiv@dividend:	
   512                           ; 2 bytes @ 0x6
   513                           
   514                           
   515                           ; 4 bytes @ 0x6
   516  0076                     	ds	1
   517  0077                     Read_Bytes_From_DS1307_RTC@Address:	
   518                           
   519                           ; 1 bytes @ 0x7
   520  0077                     	ds	1
   521  0078                     ??_DisplayTimeToLCD:	
   522  0078                     ??_DisplayDateOnLCD:	
   523                           ; 0 bytes @ 0x8
   524                           
   525  0078                     DisplayDateOnLCD@pDateArray:	
   526                           ; 0 bytes @ 0x8
   527                           
   528  0078                     Read_Bytes_From_DS1307_RTC@i:	
   529                           ; 1 bytes @ 0x8
   530                           
   531                           
   532                           ; 2 bytes @ 0x8
   533  0078                     	ds	2
   534  007A                     ??_Get_DS1307_RTC_Time:	
   535  007A                     ??_Get_DS1307_RTC_Date:	
   536                           ; 0 bytes @ 0xA
   537                           
   538  007A                     ??___aldiv:	
   539                           ; 0 bytes @ 0xA
   540                           
   541                           
   542                           ; 0 bytes @ 0xA
   543  007A                     	ds	1
   544                           
   545                           	psect	cstackBANK0
   546  003C                     __pcstackBANK0:	
   547  003C                     ___aldiv@counter:	
   548  003C                     DisplayTimeToLCD@timeArr:	
   549                           ; 1 bytes @ 0x0
   550                           
   551                           
   552                           ; 7 bytes @ 0x0
   553  003C                     	ds	1
   554  003D                     ___aldiv@sign:	
   555                           
   556                           ; 1 bytes @ 0x1
   557  003D                     	ds	1
   558  003E                     ___aldiv@quotient:	
   559                           
   560                           ; 4 bytes @ 0x2
   561  003E                     	ds	4
   562  0042                     ?_UART_Init:	
   563  0042                     UART_Init@baudrate:	
   564                           ; 1 bytes @ 0x6
   565                           
   566                           
   567                           ; 4 bytes @ 0x6
   568  0042                     	ds	1
   569  0043                     DisplayTimeToLCD@timeArrPtr:	
   570                           
   571                           ; 1 bytes @ 0x7
   572  0043                     	ds	1
   573  0044                     DisplayTimeToLCD@pTimeArray:	
   574                           
   575                           ; 1 bytes @ 0x8
   576  0044                     	ds	2
   577  0046                     ??_UART_Init:	
   578                           
   579                           ; 0 bytes @ 0xA
   580  0046                     	ds	9
   581  004F                     UART_Init@x:	
   582                           
   583                           ; 2 bytes @ 0x13
   584  004F                     	ds	2
   585  0051                     ??_main:	
   586                           
   587                           ; 0 bytes @ 0x15
   588  0051                     	ds	3
   589                           
   590                           	psect	maintext
   591  0440                     __pmaintext:	
   592 ;;Data sizes: Strings 91, constant 0, data 28, bss 10, persistent 0 stack 0
   593 ;;Auto spaces:   Size  Autos    Used
   594 ;; COMMON          14     11      12
   595 ;; BANK0           80     24      61
   596 ;; BANK1           80      0       0
   597 ;; BANK3           96      0       0
   598 ;; BANK2           96      0       0
   599 ;;
   600 ;; Pointer list with targets:
   601 ;; ?_Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
   602 ;;		 -> pRTCArray(BANK0[4]), 
   603 ;;
   604 ;; ?_Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
   605 ;;		 -> pRTCArray(BANK0[4]), 
   606 ;;
   607 ;; ?_DisplayTimeToLCD	PTR unsigned char  size(1) Largest target is 7
   608 ;;		 -> DisplayTimeToLCD@timeArr(BANK0[7]), 
   609 ;;
   610 ;; ?___aldiv	long  size(1) Largest target is 0
   611 ;;
   612 ;; DisplayDateOnLCD@pDateArray	PTR unsigned char  size(1) Largest target is 4
   613 ;;		 -> pRTCArray(BANK0[4]), 
   614 ;;
   615 ;; DisplayTimeToLCD@pTimeArray	PTR unsigned char  size(1) Largest target is 4
   616 ;;		 -> pRTCArray(BANK0[4]), 
   617 ;;
   618 ;; DisplayTimeToLCD@timeArrPtr	PTR unsigned char  size(1) Largest target is 7
   619 ;;		 -> DisplayTimeToLCD@timeArr(BANK0[7]), 
   620 ;;
   621 ;; lcdString@d	PTR unsigned char  size(2) Largest target is 21
   622 ;;		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
   623 ;;		 -> STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
   624 ;;		 -> STR_4(CODE[3]), STR_3(CODE[3]), a(BANK0[21]), 
   625 ;;
   626 ;; Read_Bytes_From_DS1307_RTC@pData	PTR unsigned char  size(1) Largest target is 4
   627 ;;		 -> pRTCArray(BANK0[4]), 
   628 ;;
   629 ;; sp__Get_DS1307_RTC_Date	PTR unsigned char  size(1) Largest target is 4
   630 ;;		 -> pRTCArray(BANK0[4]), 
   631 ;;
   632 ;; sp__DisplayTimeToLCD	PTR unsigned char  size(1) Largest target is 7
   633 ;;		 -> DisplayTimeToLCD@timeArr(BANK0[7]), 
   634 ;;
   635 ;; sp__Get_DS1307_RTC_Time	PTR unsigned char  size(1) Largest target is 4
   636 ;;		 -> pRTCArray(BANK0[4]), 
   637 ;;
   638 ;; main@pTimeArray	PTR unsigned char  size(1) Largest target is 7
   639 ;;		 -> DisplayTimeToLCD@timeArr(BANK0[7]), 
   640 ;;
   641 ;; UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 29
   642 ;;		 -> STR_2(CODE[29]), STR_1(CODE[24]), 
   643 ;;
   644 ;;
   645 ;; Critical Paths under _main in COMMON
   646 ;;
   647 ;;   _main->_Get_DS1307_RTC_Time
   648 ;;   _main->_Get_DS1307_RTC_Date
   649 ;;   _DisplayDateOnLCD->_lcdString
   650 ;;   _DisplayTimeToLCD->_lcdString
   651 ;;   _lcdString->_lcdData
   652 ;;   _lcdClr->_lcdCmd
   653 ;;   _InitLCD->_lcdCmd
   654 ;;   _Get_DS1307_RTC_Date->_Read_Bytes_From_DS1307_RTC
   655 ;;   _Get_DS1307_RTC_Time->_Read_Bytes_From_DS1307_RTC
   656 ;;   _lcdData->_ToggleEpinOfLCD
   657 ;;   _lcdCmd->_ToggleEpinOfLCD
   658 ;;   _Read_Bytes_From_DS1307_RTC->_I2C_Write_Byte
   659 ;;   _UART_Write_Text->_UART_Write
   660 ;;   _UART_Init->___aldiv
   661 ;;
   662 ;; Critical Paths under _isr in COMMON
   663 ;;
   664 ;;   None.
   665 ;;
   666 ;; Critical Paths under _main in BANK0
   667 ;;
   668 ;;   _main->_UART_Init
   669 ;;   _UART_Init->___aldiv
   670 ;;
   671 ;; Critical Paths under _isr in BANK0
   672 ;;
   673 ;;   None.
   674 ;;
   675 ;; Critical Paths under _main in BANK1
   676 ;;
   677 ;;   None.
   678 ;;
   679 ;; Critical Paths under _isr in BANK1
   680 ;;
   681 ;;   None.
   682 ;;
   683 ;; Critical Paths under _main in BANK3
   684 ;;
   685 ;;   None.
   686 ;;
   687 ;; Critical Paths under _isr in BANK3
   688 ;;
   689 ;;   None.
   690 ;;
   691 ;; Critical Paths under _main in BANK2
   692 ;;
   693 ;;   None.
   694 ;;
   695 ;; Critical Paths under _isr in BANK2
   696 ;;
   697 ;;   None.
   698 ;;
   699 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   700 ;;
   701 ;;
   702 ;;Call Graph Tables:
   703 ;;
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   706 ;; ---------------------------------------------------------------------------------
   707 ;; (0) _main                                                 4     4      0    3082
   708 ;;                                             21 BANK0      3     3      0
   709 ;;                            _InitLCD
   710 ;;                            _InitI2C
   711 ;;                             _lcdClr
   712 ;;                          _lcdString
   713 ;;                             _lcdCmd
   714 ;;                            _lcdData
   715 ;;                _Get_DS1307_RTC_Time
   716 ;;                   _DisplayTimeToLCD
   717 ;;                _Get_DS1307_RTC_Date
   718 ;;                   _DisplayDateOnLCD
   719 ;;                          _UART_Init
   720 ;;                    _UART_Write_Text
   721 ;;                         _UART_Write
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (1) _DisplayDateOnLCD                                     1     1      0     631
   724 ;;                                              8 COMMON     1     1      0
   725 ;;                             _lcdCmd
   726 ;;                            ___lbdiv
   727 ;;                            _lcdData
   728 ;;                            ___lbmod
   729 ;;                          _lcdString
   730 ;; ---------------------------------------------------------------------------------
   731 ;; (1) _DisplayTimeToLCD                                     9     9      0     953
   732 ;;                                              0 BANK0      9     9      0
   733 ;;                             _lcdCmd
   734 ;;                            ___lbdiv
   735 ;;                            ___lbmod
   736 ;;                            _lcdData
   737 ;;                          _lcdString
   738 ;; ---------------------------------------------------------------------------------
   739 ;; (2) _lcdString                                            4     2      2     112
   740 ;;                                              4 COMMON     4     2      2
   741 ;;                            _lcdData
   742 ;; ---------------------------------------------------------------------------------
   743 ;; (1) _lcdClr                                               2     2      0      22
   744 ;;                                              4 COMMON     2     2      0
   745 ;;                             _lcdCmd
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (1) _InitLCD                                              0     0      0      22
   748 ;;                             _lcdCmd
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _Get_DS1307_RTC_Date                                  1     1      0     248
   751 ;;                                             10 COMMON     1     1      0
   752 ;;         _Read_Bytes_From_DS1307_RTC
   753 ;;                             ___bmul
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (1) _Get_DS1307_RTC_Time                                  1     1      0     248
   756 ;;                                             10 COMMON     1     1      0
   757 ;;         _Read_Bytes_From_DS1307_RTC
   758 ;;                             ___bmul
   759 ;; ---------------------------------------------------------------------------------
   760 ;; (3) _lcdData                                              1     1      0      22
   761 ;;                                              3 COMMON     1     1      0
   762 ;;                    _ToggleEpinOfLCD
   763 ;; ---------------------------------------------------------------------------------
   764 ;; (2) _lcdCmd                                               1     1      0      22
   765 ;;                                              3 COMMON     1     1      0
   766 ;;                    _ToggleEpinOfLCD
   767 ;; ---------------------------------------------------------------------------------
   768 ;; (4) _ToggleEpinOfLCD                                      1     1      0       0
   769 ;;                                              2 COMMON     1     1      0
   770 ;; ---------------------------------------------------------------------------------
   771 ;; (2) _Read_Bytes_From_DS1307_RTC                           7     4      3     156
   772 ;;                                              3 COMMON     7     4      3
   773 ;;                          _I2C_Start
   774 ;;                     _I2C_Write_Byte
   775 ;;                        _I2C_ReStart
   776 ;;                      _I2C_Read_Byte
   777 ;;                       _I2C_Send_ACK
   778 ;;                      _I2C_Send_NACK
   779 ;;                           _I2C_Stop
   780 ;; ---------------------------------------------------------------------------------
   781 ;; (1) _InitI2C                                              3     3      0       0
   782 ;;                                              2 COMMON     3     3      0
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (1) _UART_Write_Text                                      3     3      0     112
   785 ;;                                              3 COMMON     3     3      0
   786 ;;                         _UART_Write
   787 ;; ---------------------------------------------------------------------------------
   788 ;; (1) _UART_Init                                           15    11      4     668
   789 ;;                                              6 BANK0     15    11      4
   790 ;;                            ___aldiv
   791 ;; ---------------------------------------------------------------------------------
   792 ;; (2) ___aldiv                                             14     6      8     445
   793 ;;                                              2 COMMON     8     0      8
   794 ;;                                              0 BANK0      6     6      0
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (2) ___lbmod                                              5     4      1     159
   797 ;;                                              2 COMMON     5     4      1
   798 ;; ---------------------------------------------------------------------------------
   799 ;; (2) ___lbdiv                                              4     3      1     162
   800 ;;                                              2 COMMON     4     3      1
   801 ;; ---------------------------------------------------------------------------------
   802 ;; (2) ___bmul                                               3     2      1      92
   803 ;;                                              2 COMMON     3     2      1
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (3) _I2C_Send_ACK                                         0     0      0       0
   806 ;; ---------------------------------------------------------------------------------
   807 ;; (3) _I2C_Send_NACK                                        0     0      0       0
   808 ;; ---------------------------------------------------------------------------------
   809 ;; (3) _I2C_Read_Byte                                        0     0      0       0
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (3) _I2C_ReStart                                          0     0      0       0
   812 ;; ---------------------------------------------------------------------------------
   813 ;; (3) _I2C_Stop                                             0     0      0       0
   814 ;; ---------------------------------------------------------------------------------
   815 ;; (3) _I2C_Write_Byte                                       1     1      0      22
   816 ;;                                              2 COMMON     1     1      0
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (3) _I2C_Start                                            0     0      0       0
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (1) _UART_Write                                           1     1      0      22
   821 ;;                                              2 COMMON     1     1      0
   822 ;; ---------------------------------------------------------------------------------
   823 ;; Estimated maximum stack depth 4
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (5) _isr                                                  2     2      0       0
   828 ;;                                              0 COMMON     2     2      0
   829 ;; ---------------------------------------------------------------------------------
   830 ;; Estimated maximum stack depth 5
   831 ;; ---------------------------------------------------------------------------------
   832 ;; Call Graph Graphs:
   833 ;; _main (ROOT)
   834 ;;   _InitLCD
   835 ;;     _lcdCmd
   836 ;;       _ToggleEpinOfLCD
   837 ;;   _InitI2C
   838 ;;   _lcdClr
   839 ;;     _lcdCmd
   840 ;;       _ToggleEpinOfLCD
   841 ;;   _lcdString
   842 ;;     _lcdData
   843 ;;       _ToggleEpinOfLCD
   844 ;;   _lcdCmd
   845 ;;     _ToggleEpinOfLCD
   846 ;;   _lcdData
   847 ;;     _ToggleEpinOfLCD
   848 ;;   _Get_DS1307_RTC_Time
   849 ;;     _Read_Bytes_From_DS1307_RTC
   850 ;;       _I2C_Start
   851 ;;       _I2C_Write_Byte
   852 ;;       _I2C_ReStart
   853 ;;       _I2C_Read_Byte
   854 ;;       _I2C_Send_ACK
   855 ;;       _I2C_Send_NACK
   856 ;;       _I2C_Stop
   857 ;;     ___bmul
   858 ;;   _DisplayTimeToLCD
   859 ;;     _lcdCmd
   860 ;;       _ToggleEpinOfLCD
   861 ;;     ___lbdiv
   862 ;;     ___lbmod
   863 ;;     _lcdData
   864 ;;       _ToggleEpinOfLCD
   865 ;;     _lcdString
   866 ;;       _lcdData
   867 ;;         _ToggleEpinOfLCD
   868 ;;   _Get_DS1307_RTC_Date
   869 ;;     _Read_Bytes_From_DS1307_RTC
   870 ;;       _I2C_Start
   871 ;;       _I2C_Write_Byte
   872 ;;       _I2C_ReStart
   873 ;;       _I2C_Read_Byte
   874 ;;       _I2C_Send_ACK
   875 ;;       _I2C_Send_NACK
   876 ;;       _I2C_Stop
   877 ;;     ___bmul
   878 ;;   _DisplayDateOnLCD
   879 ;;     _lcdCmd
   880 ;;       _ToggleEpinOfLCD
   881 ;;     ___lbdiv
   882 ;;     _lcdData
   883 ;;       _ToggleEpinOfLCD
   884 ;;     ___lbmod
   885 ;;     _lcdString
   886 ;;       _lcdData
   887 ;;         _ToggleEpinOfLCD
   888 ;;   _UART_Init
   889 ;;     ___aldiv
   890 ;;   _UART_Write_Text
   891 ;;     _UART_Write
   892 ;;   _UART_Write
   893 ;;
   894 ;; _isr (ROOT)
   895 ;;
   896 ;; Address spaces:
   897 ;;Name               Size   Autos  Total    Cost      Usage
   898 ;;BANK3               60      0       0       9        0.0%
   899 ;;BITBANK3            60      0       0       8        0.0%
   900 ;;SFR3                 0      0       0       4        0.0%
   901 ;;BITSFR3              0      0       0       4        0.0%
   902 ;;BANK2               60      0       0      11        0.0%
   903 ;;BITBANK2            60      0       0      10        0.0%
   904 ;;SFR2                 0      0       0       5        0.0%
   905 ;;BITSFR2              0      0       0       5        0.0%
   906 ;;SFR1                 0      0       0       2        0.0%
   907 ;;BITSFR1              0      0       0       2        0.0%
   908 ;;BANK1               50      0       0       7        0.0%
   909 ;;BITBANK1            50      0       0       6        0.0%
   910 ;;CODE                 0      0       0       0        0.0%
   911 ;;DATA                 0      0      4D      12        0.0%
   912 ;;ABS                  0      0      49       3        0.0%
   913 ;;NULL                 0      0       0       0        0.0%
   914 ;;STACK                0      0       4       2        0.0%
   915 ;;BANK0               50     18      3D       5       76.3%
   916 ;;BITBANK0            50      0       0       4        0.0%
   917 ;;SFR0                 0      0       0       1        0.0%
   918 ;;BITSFR0              0      0       0       1        0.0%
   919 ;;COMMON               E      B       C       1       85.7%
   920 ;;BITCOMMON            E      0       0       0        0.0%
   921 ;;EEDATA             100      0       0       0        0.0%
   922                           
   923                           
   924 ;; *************** function _main *****************
   925 ;; Defined at:
   926 ;;		line 48 in file "energymeter_lcd_rtc.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  pTimeArray      1    0        PTR unsigned char 
   931 ;;		 -> DisplayTimeToLCD@timeArr(7), 
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 17F/0
   938 ;;		On exit  : 60/20
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         0       0       0       0       0
   943 ;;      Temps:          0       3       0       0       0
   944 ;;      Totals:         0       3       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels required when called:    5
   947 ;; This function calls:
   948 ;;		_InitLCD
   949 ;;		_InitI2C
   950 ;;		_lcdClr
   951 ;;		_lcdString
   952 ;;		_lcdCmd
   953 ;;		_lcdData
   954 ;;		_Get_DS1307_RTC_Time
   955 ;;		_DisplayTimeToLCD
   956 ;;		_Get_DS1307_RTC_Date
   957 ;;		_DisplayDateOnLCD
   958 ;;		_UART_Init
   959 ;;		_UART_Write_Text
   960 ;;		_UART_Write
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965  0440                     _main:	
   966                           
   967                           ;energymeter_lcd_rtc.c: 52: TRISB=255;
   968                           
   969                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   970  0440  30FF               	movlw	255
   971  0441  1683               	bsf	3,5	;RP0=1, select bank1
   972  0442  0086               	movwf	6	;volatile
   973                           
   974                           ;energymeter_lcd_rtc.c: 53: unsigned char* pTimeArray;
   975                           ;energymeter_lcd_rtc.c: 55: InitLCD();
   976  0443  120A  118A  21D7   	fcall	_InitLCD
      +       120A  118A         
   977                           
   978                           ;energymeter_lcd_rtc.c: 56: InitI2C();
   979  0448  120A  118A  25D7   	fcall	_InitI2C
      +       120A  118A         
   980                           
   981                           ;energymeter_lcd_rtc.c: 57: lcdClr();
   982  044D  120A  118A  200F   	fcall	_lcdClr
      +       120A  118A         
   983  0452  3027               	movlw	_a& (0+255)
   984                           
   985                           ;energymeter_lcd_rtc.c: 60: RBIE=1;
   986  0453  158B               	bsf	11,3
   987                           
   988                           ;energymeter_lcd_rtc.c: 61: RBIF=0;
   989  0454  100B               	bcf	11,0
   990                           
   991                           ;energymeter_lcd_rtc.c: 62: GIE=1;
   992  0455  178B               	bsf	11,7
   993                           
   994                           ;energymeter_lcd_rtc.c: 64: lcdString(a);
   995  0456  00F4               	movwf	?_lcdString
   996  0457  01F5               	clrf	?_lcdString+1
   997  0458  120A  118A  21B2   	fcall	_lcdString
      +       120A  118A         
   998                           
   999                           ;energymeter_lcd_rtc.c: 66: lcdCmd(0xD4);
  1000  045D  30D4               	movlw	212
  1001  045E  120A  118A  21F5   	fcall	_lcdCmd
      +       120A  118A         
  1002                           
  1003                           ;energymeter_lcd_rtc.c: 67: for(i=0;i<6;i++)
  1004  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0465  01D6               	clrf	_i
  1007  0466  01D7               	clrf	_i+1
  1008  0467                     l5585:	
  1009                           
  1010                           ;energymeter_lcd_rtc.c: 68: lcdData(b[i]);
  1011  0467  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0468  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0469  0856               	movf	_i,w
  1014  046A  3E20               	addlw	_b& (0+255)
  1015  046B  0084               	movwf	4
  1016  046C  1383               	bcf	3,7	;select IRP bank0
  1017  046D  0800               	movf	0,w
  1018  046E  120A  118A  2175   	fcall	_lcdData
      +       120A  118A         
  1019  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0475  0AD6               	incf	_i,f
  1022  0476  1903               	skipnz
  1023  0477  0AD7               	incf	_i+1,f
  1024  0478  0857               	movf	_i+1,w
  1025  0479  3A80               	xorlw	128
  1026  047A  00FF               	movwf	127
  1027  047B  3080               	movlw	128
  1028  047C  027F               	subwf	127,w
  1029  047D  1D03               	skipz
  1030  047E  2C81               	goto	u1025
  1031  047F  3006               	movlw	6
  1032  0480  0256               	subwf	_i,w
  1033  0481                     u1025:	
  1034  0481  1C03               	skipc
  1035  0482  2C67               	goto	l5585
  1036  0483                     l5591:	
  1037                           
  1038                           ;energymeter_lcd_rtc.c: 75: {
  1039                           ;energymeter_lcd_rtc.c: 77: pTimeArray = DisplayTimeToLCD(Get_DS1307_RTC_Time());
  1040  0483  120A  118A  236D   	fcall	_Get_DS1307_RTC_Time
      +       120A  118A         
  1041  0488  120A  118A  20B9   	fcall	_DisplayTimeToLCD
      +       120A  118A         
  1042                           
  1043                           ;energymeter_lcd_rtc.c: 78: DisplayDateOnLCD(Get_DS1307_RTC_Date());
  1044  048D  120A  118A  2342   	fcall	_Get_DS1307_RTC_Date
      +       120A  118A         
  1045  0492  120A  118A  201D   	fcall	_DisplayDateOnLCD
      +       120A  118A         
  1046                           
  1047                           ;energymeter_lcd_rtc.c: 80: count_ch=(char)(count+48);
  1048  0497  0854               	movf	_count,w
  1049  0498  3E30               	addlw	48
  1050  0499  00D8               	movwf	_count_ch
  1051                           
  1052                           ;energymeter_lcd_rtc.c: 81: lcdCmd(0xDA);
  1053  049A  30DA               	movlw	218
  1054  049B  120A  118A  21F5   	fcall	_lcdCmd
      +       120A  118A         
  1055                           
  1056                           ;energymeter_lcd_rtc.c: 82: lcdData(count_ch);
  1057  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1058  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1059  04A2  0858               	movf	_count_ch,w
  1060  04A3  120A  118A  2175   	fcall	_lcdData
      +       120A  118A         
  1061                           
  1062                           ;energymeter_lcd_rtc.c: 89: if(count==5)
  1063  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1064  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1065  04AA  0854               	movf	_count,w
  1066  04AB  3A05               	xorlw	5
  1067  04AC  0455               	iorwf	_count+1,w
  1068  04AD  1D03               	skipz
  1069  04AE  2C83               	goto	l5591
  1070  04AF  3000               	movlw	0
  1071                           
  1072                           ;energymeter_lcd_rtc.c: 90: {
  1073                           ;energymeter_lcd_rtc.c: 91: count=0;
  1074  04B0  01D4               	clrf	_count
  1075  04B1  01D5               	clrf	_count+1
  1076                           
  1077                           ;energymeter_lcd_rtc.c: 92: UART_Init(9600);
  1078  04B2  00C5               	movwf	?_UART_Init+3
  1079  04B3  00C4               	movwf	?_UART_Init+2
  1080  04B4  3025               	movlw	37
  1081  04B5  00C3               	movwf	?_UART_Init+1
  1082  04B6  3080               	movlw	128
  1083  04B7  00C2               	movwf	?_UART_Init
  1084  04B8  120A  118A  2233   	fcall	_UART_Init
      +       120A  118A         
  1085                           
  1086                           ;energymeter_lcd_rtc.c: 93: UART_Write_Text("AT+CMGS=\"+918428099468\"");
  1087  04BD  301E               	movlw	(STR_1-__stringbase)& (0+255)
  1088  04BE  120A  118A  25B1   	fcall	_UART_Write_Text
      +       120A  118A         
  1089                           
  1090                           ;energymeter_lcd_rtc.c: 94: UART_Write(0x0D);
  1091  04C3  300D               	movlw	13
  1092  04C4  120A  118A  25CE   	fcall	_UART_Write
      +       120A  118A         
  1093                           
  1094                           ;energymeter_lcd_rtc.c: 95: UART_Write(0x0A);
  1095  04C9  300A               	movlw	10
  1096  04CA  120A  118A  25CE   	fcall	_UART_Write
      +       120A  118A         
  1097                           
  1098                           ;energymeter_lcd_rtc.c: 96: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1099  04CF  301A               	movlw	26
  1100  04D0  00D3               	movwf	??_main+2
  1101  04D1  305E               	movlw	94
  1102  04D2  00D2               	movwf	??_main+1
  1103  04D3  3086               	movlw	134
  1104  04D4  00D1               	movwf	??_main
  1105  04D5                     u1057:	
  1106  04D5  0BD1               	decfsz	??_main,f
  1107  04D6  2CD5               	goto	u1057
  1108  04D7  0BD2               	decfsz	??_main+1,f
  1109  04D8  2CD5               	goto	u1057
  1110  04D9  0BD3               	decfsz	??_main+2,f
  1111  04DA  2CD5               	goto	u1057
  1112  04DB  0064               	clrwdt
  1113                           
  1114                           ;energymeter_lcd_rtc.c: 98: UART_Write_Text("CUSTOMERID 9400557497 COUNT ");
  1115  04DC  3001               	movlw	(STR_2-__stringbase)& (0+255)
  1116  04DD  120A  118A  25B1   	fcall	_UART_Write_Text
      +       120A  118A         
  1117                           
  1118                           ;energymeter_lcd_rtc.c: 99: UART_Write(count_ch);
  1119  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  1120  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  1121  04E4  0858               	movf	_count_ch,w
  1122  04E5  120A  118A  25CE   	fcall	_UART_Write
      +       120A  118A         
  1123                           
  1124                           ;energymeter_lcd_rtc.c: 100: UART_Write(0x1A);
  1125  04EA  301A               	movlw	26
  1126  04EB  120A  118A  25CE   	fcall	_UART_Write
      +       120A  118A         
  1127                           
  1128                           ;energymeter_lcd_rtc.c: 101: _delay((unsigned long)((1000)*(20000000/4000.0)));
  1129  04F0  301A               	movlw	26
  1130  04F1  00D3               	movwf	??_main+2
  1131  04F2  305E               	movlw	94
  1132  04F3  00D2               	movwf	??_main+1
  1133  04F4  3086               	movlw	134
  1134  04F5  00D1               	movwf	??_main
  1135  04F6                     u1067:	
  1136  04F6  0BD1               	decfsz	??_main,f
  1137  04F7  2CF6               	goto	u1067
  1138  04F8  0BD2               	decfsz	??_main+1,f
  1139  04F9  2CF6               	goto	u1067
  1140  04FA  0BD3               	decfsz	??_main+2,f
  1141  04FB  2CF6               	goto	u1067
  1142  04FC  0064               	clrwdt
  1143  04FD                     l784:	
  1144                           ;energymeter_lcd_rtc.c: 102: while(!TRMT);
  1145                           
  1146  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1147  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  1148  04FF  1898               	btfsc	24,1
  1149  0500  2C83               	goto	l5591
  1150  0501  2CFD               	goto	l784
  1151  0502                     __end_of_main:	
  1152                           
  1153                           	psect	text914
  1154  000F                     __ptext914:	
  1155 ;; =============== function _lcdString ends ============
  1156                           
  1157                           
  1158 ;; *************** function _lcdClr *****************
  1159 ;; Defined at:
  1160 ;;		line 59 in file "LCD.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;		None               void
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 60/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          2       0       0       0       0
  1177 ;;      Totals:         2       0       0       0       0
  1178 ;;Total ram usage:        2 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    3
  1181 ;; This function calls:
  1182 ;;		_lcdCmd
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187  000F                     _lcdClr:	
  1188                           
  1189                           ;LCD.c: 60: lcdCmd(0x01);
  1190                           
  1191                           ; Regs used in _lcdClr: [wreg+status,2+status,0+pclath+cstack]
  1192  000F  3001               	movlw	1
  1193  0010  21F5  120A  118A   	fcall	_lcdCmd
  1194                           
  1195                           ;LCD.c: 61: _delay((unsigned long)((2)*(20000000/4000.0)));
  1196  0013  300D               	movlw	13
  1197  0014  00F5               	movwf	??_lcdClr+1
  1198  0015  30FB               	movlw	251
  1199  0016  00F4               	movwf	??_lcdClr
  1200  0017                     u1077:	
  1201  0017  0BF4               	decfsz	??_lcdClr,f
  1202  0018  2817               	goto	u1077
  1203  0019  0BF5               	decfsz	??_lcdClr+1,f
  1204  001A  2817               	goto	u1077
  1205  001B  281C               	nop2
  1206  001C  0008               	return
  1207  001D                     __end_of_lcdClr:	
  1208  001D                     __ptext911:	
  1209 ;; =============== function _main ends ============
  1210                           
  1211                           
  1212 ;; *************** function _DisplayDateOnLCD *****************
  1213 ;; Defined at:
  1214 ;;		line 121 in file "LCD.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  pDateArray      1    wreg     PTR unsigned char 
  1217 ;;		 -> pRTCArray(4), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  pDateArray      1    8[COMMON] PTR unsigned char 
  1220 ;;		 -> pRTCArray(4), 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;		None               void
  1223 ;; Registers used:
  1224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 160/0
  1227 ;;		On exit  : 60/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1230 ;;      Params:         0       0       0       0       0
  1231 ;;      Locals:         1       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0
  1233 ;;      Totals:         1       0       0       0       0
  1234 ;;Total ram usage:        1 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    4
  1237 ;; This function calls:
  1238 ;;		_lcdCmd
  1239 ;;		___lbdiv
  1240 ;;		_lcdData
  1241 ;;		___lbmod
  1242 ;;		_lcdString
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247  001D                     _DisplayDateOnLCD:	
  1248                           
  1249                           ; Regs used in _DisplayDateOnLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1250                           ;DisplayDateOnLCD@pDateArray stored from wreg
  1251  001D  00F8               	movwf	DisplayDateOnLCD@pDateArray
  1252                           
  1253                           ;LCD.c: 123: lcdCmd(0x94);
  1254  001E  3094               	movlw	148
  1255  001F  21F5  120A  118A   	fcall	_lcdCmd
  1256                           
  1257                           ;LCD.c: 126: lcdData( (pDateArray[1]/10)+0x30 );
  1258  0022  300A               	movlw	10
  1259  0023  00F2               	movwf	?___lbdiv
  1260  0024  222A  120A  118A   	fcall	PL14	;call to abstracted procedure
  1261  0027  217B  120A  118A   	fcall	___lbdiv
  1262  002A  3E30               	addlw	48
  1263  002B  2175  120A  118A   	fcall	_lcdData
  1264                           
  1265                           ;LCD.c: 127: lcdData( (pDateArray[1]%10)+0x30 );
  1266  002E  300A               	movlw	10
  1267  002F  00F2               	movwf	?___lbmod
  1268  0030  222A  120A  118A   	fcall	PL14	;call to abstracted procedure
  1269  0033  2196  120A  118A   	fcall	___lbmod
  1270  0036  3E30               	addlw	48
  1271  0037  2175  120A  118A   	fcall	_lcdData
  1272                           
  1273                           ;LCD.c: 130: lcdData('/');
  1274  003A  302F               	movlw	47
  1275  003B  2175  120A  118A   	fcall	_lcdData
  1276                           
  1277                           ;LCD.c: 133: lcdData( (pDateArray[2]/10)+0x30 );
  1278  003E  300A               	movlw	10
  1279  003F  00F2               	movwf	?___lbdiv
  1280  0040  2224  120A  118A   	fcall	PL13	;call to abstracted procedure
  1281  0043  217B  120A  118A   	fcall	___lbdiv
  1282  0046  3E30               	addlw	48
  1283  0047  2175  120A  118A   	fcall	_lcdData
  1284                           
  1285                           ;LCD.c: 134: lcdData( (pDateArray[2]%10)+0x30 );
  1286  004A  300A               	movlw	10
  1287  004B  00F2               	movwf	?___lbmod
  1288  004C  2224  120A  118A   	fcall	PL13	;call to abstracted procedure
  1289  004F  2196  120A  118A   	fcall	___lbmod
  1290  0052  3E30               	addlw	48
  1291  0053  2175  120A  118A   	fcall	_lcdData
  1292                           
  1293                           ;LCD.c: 137: lcdData('/');
  1294  0056  302F               	movlw	47
  1295  0057  2175  120A  118A   	fcall	_lcdData
  1296                           
  1297                           ;LCD.c: 140: lcdData( (pDateArray[3]/10)+0x30 );
  1298  005A  300A               	movlw	10
  1299  005B  00F2               	movwf	?___lbdiv
  1300  005C  221E  120A  118A   	fcall	PL12	;call to abstracted procedure
  1301  005F  217B  120A  118A   	fcall	___lbdiv
  1302  0062  3E30               	addlw	48
  1303  0063  2175  120A  118A   	fcall	_lcdData
  1304                           
  1305                           ;LCD.c: 141: lcdData( (pDateArray[3]%10)+0x30 );
  1306  0066  300A               	movlw	10
  1307  0067  00F2               	movwf	?___lbmod
  1308  0068  221E  120A  118A   	fcall	PL12	;call to abstracted procedure
  1309  006B  2196  120A  118A   	fcall	___lbmod
  1310  006E  3E30               	addlw	48
  1311  006F  2175  120A  118A   	fcall	_lcdData
  1312                           
  1313                           ;LCD.c: 144: lcdData(' ');
  1314  0072  3020               	movlw	32
  1315  0073  2175  120A  118A   	fcall	_lcdData
  1316                           
  1317                           ;LCD.c: 147: switch(pDateArray[0])
  1318  0076  0878               	movf	DisplayDateOnLCD@pDateArray,w
  1319  0077  0084               	movwf	4
  1320  0078  1383               	bcf	3,7	;select IRP bank0
  1321  0079  0800               	movf	0,w
  1322                           
  1323                           ; Switch size 1, requested type "space"
  1324                           ; Number of cases is 7, Range of values is 1 to 7
  1325                           ; switch strategies available:
  1326                           ; Name         Instructions Cycles
  1327                           ; simple_byte           22    12 (average)
  1328                           ; direct_byte           32    11 (fixed)
  1329                           ; jumptable            263     9 (fixed)
  1330                           ;	Chosen strategy is simple_byte
  1331  007A  3A01               	xorlw	1	; case 1
  1332  007B  1903               	skipnz
  1333  007C  2891               	goto	l5411
  1334  007D  3A03               	xorlw	3	; case 2
  1335  007E  1903               	skipnz
  1336  007F  2896               	goto	l5413
  1337  0080  3A01               	xorlw	1	; case 3
  1338  0081  1903               	skipnz
  1339  0082  289B               	goto	l5415
  1340  0083  3A07               	xorlw	7	; case 4
  1341  0084  1903               	skipnz
  1342  0085  28A0               	goto	l5417
  1343  0086  3A01               	xorlw	1	; case 5
  1344  0087  1903               	skipnz
  1345  0088  28A5               	goto	l5419
  1346  0089  3A03               	xorlw	3	; case 6
  1347  008A  1903               	skipnz
  1348  008B  28AA               	goto	l5421
  1349  008C  3A01               	xorlw	1	; case 7
  1350  008D  1903               	skipnz
  1351  008E  28AF               	goto	l5423
  1352  008F  28B4               	goto	l5425
  1353  0090  0008               	return
  1354  0091                     l5411:	
  1355  0091  3046               	movlw	low (STR_5-__stringbase)
  1356  0092  00F4               	movwf	?_lcdString
  1357  0093  3080               	movlw	128
  1358  0094  00F5               	movwf	?_lcdString+1
  1359  0095  29B2               	ljmp	l5341
  1360  0096                     l5413:	
  1361  0096  303E               	movlw	low (STR_6-__stringbase)
  1362  0097  00F4               	movwf	?_lcdString
  1363  0098  3080               	movlw	128
  1364  0099  00F5               	movwf	?_lcdString+1
  1365  009A  29B2               	ljmp	l5341
  1366  009B                     l5415:	
  1367  009B  303A               	movlw	low (STR_7-__stringbase)
  1368  009C  00F4               	movwf	?_lcdString
  1369  009D  3080               	movlw	128
  1370  009E  00F5               	movwf	?_lcdString+1
  1371  009F  29B2               	ljmp	l5341
  1372  00A0                     l5417:	
  1373  00A0  3052               	movlw	low (STR_8-__stringbase)
  1374  00A1  00F4               	movwf	?_lcdString
  1375  00A2  3080               	movlw	128
  1376  00A3  00F5               	movwf	?_lcdString+1
  1377  00A4  29B2               	ljmp	l5341
  1378  00A5                     l5419:	
  1379  00A5  3042               	movlw	low (STR_9-__stringbase)
  1380  00A6  00F4               	movwf	?_lcdString
  1381  00A7  3080               	movlw	128
  1382  00A8  00F5               	movwf	?_lcdString+1
  1383  00A9  29B2               	ljmp	l5341
  1384  00AA                     l5421:	
  1385  00AA  304E               	movlw	low (STR_10-__stringbase)
  1386  00AB  00F4               	movwf	?_lcdString
  1387  00AC  3080               	movlw	128
  1388  00AD  00F5               	movwf	?_lcdString+1
  1389  00AE  29B2               	ljmp	l5341
  1390  00AF                     l5423:	
  1391  00AF  304A               	movlw	low (STR_11-__stringbase)
  1392  00B0  00F4               	movwf	?_lcdString
  1393  00B1  3080               	movlw	128
  1394  00B2  00F5               	movwf	?_lcdString+1
  1395  00B3  29B2               	ljmp	l5341
  1396  00B4                     l5425:	
  1397  00B4  3036               	movlw	low (STR_12-__stringbase)
  1398  00B5  00F4               	movwf	?_lcdString
  1399  00B6  3080               	movlw	128
  1400  00B7  00F5               	movwf	?_lcdString+1
  1401  00B8  29B2               	ljmp	l5341
  1402  00B9                     __end_of_DisplayDateOnLCD:	
  1403  00B9                     __ptext912:	
  1404 ;; =============== function _DisplayDateOnLCD ends ============
  1405                           
  1406                           
  1407 ;; *************** function _DisplayTimeToLCD *****************
  1408 ;; Defined at:
  1409 ;;		line 68 in file "LCD.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;  pTimeArray      1    wreg     PTR unsigned char 
  1412 ;;		 -> pRTCArray(4), 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  pTimeArray      1    8[BANK0 ] PTR unsigned char 
  1415 ;;		 -> pRTCArray(4), 
  1416 ;;  timeArr         7    0[BANK0 ] unsigned char [7]
  1417 ;;  timeArrPtr      1    7[BANK0 ] PTR unsigned char 
  1418 ;;		 -> DisplayTimeToLCD@timeArr(7), 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      PTR unsigned char 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 160/0
  1425 ;;		On exit  : 60/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         0       0       0       0       0
  1429 ;;      Locals:         0       9       0       0       0
  1430 ;;      Temps:          0       0       0       0       0
  1431 ;;      Totals:         0       9       0       0       0
  1432 ;;Total ram usage:        9 bytes
  1433 ;; Hardware stack levels used:    1
  1434 ;; Hardware stack levels required when called:    4
  1435 ;; This function calls:
  1436 ;;		_lcdCmd
  1437 ;;		___lbdiv
  1438 ;;		___lbmod
  1439 ;;		_lcdData
  1440 ;;		_lcdString
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445  00B9                     _DisplayTimeToLCD:	
  1446                           
  1447                           ; Regs used in _DisplayTimeToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1448                           ;DisplayTimeToLCD@pTimeArray stored from wreg
  1449  00B9  00C4               	movwf	DisplayTimeToLCD@pTimeArray
  1450                           
  1451                           ;LCD.c: 70: char timeArr[7];
  1452                           ;LCD.c: 71: char * timeArrPtr = &timeArr;
  1453  00BA  303C               	movlw	DisplayTimeToLCD@timeArr& (0+255)
  1454  00BB  00C3               	movwf	DisplayTimeToLCD@timeArrPtr
  1455                           
  1456                           ;LCD.c: 72: lcdCmd(0xC0);
  1457  00BC  30C0               	movlw	192
  1458  00BD  21F5  120A  118A   	fcall	_lcdCmd
  1459                           
  1460                           ;LCD.c: 74: timeArr[0]=(pTimeArray[2]/10)+0x30;
  1461  00C0  300A               	movlw	10
  1462  00C1  00F2               	movwf	?___lbdiv
  1463  00C2  2207  120A  118A   	fcall	PL4	;call to abstracted procedure
  1464  00C5  217B  120A  118A   	fcall	___lbdiv
  1465  00C8  3E30               	addlw	48
  1466  00C9  00BC               	movwf	DisplayTimeToLCD@timeArr
  1467                           
  1468                           ;LCD.c: 75: timeArr[1]=(pTimeArray[2]%10)+0x30;
  1469  00CA  300A               	movlw	10
  1470  00CB  00F2               	movwf	?___lbmod
  1471  00CC  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1472  00CD  3E02               	addlw	2
  1473  00CE  0084               	movwf	4
  1474  00CF  0800               	movf	0,w
  1475  00D0  2196  120A  118A   	fcall	___lbmod
  1476  00D3  3E30               	addlw	48
  1477  00D4  00BD               	movwf	DisplayTimeToLCD@timeArr+1
  1478                           
  1479                           ;LCD.c: 77: lcdData( (pTimeArray[2]/10)+0x30 );
  1480  00D5  300A               	movlw	10
  1481  00D6  00F2               	movwf	?___lbdiv
  1482  00D7  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1483  00D8  3E02               	addlw	2
  1484  00D9  0084               	movwf	4
  1485  00DA  0800               	movf	0,w
  1486  00DB  217B  120A  118A   	fcall	___lbdiv
  1487  00DE  3E30               	addlw	48
  1488  00DF  2175  120A  118A   	fcall	_lcdData
  1489                           
  1490                           ;LCD.c: 78: lcdData( (pTimeArray[2]%10)+0x30 );
  1491  00E2  300A               	movlw	10
  1492  00E3  00F2               	movwf	?___lbmod
  1493  00E4  2207  120A  118A   	fcall	PL4	;call to abstracted procedure
  1494  00E7  2196  120A  118A   	fcall	___lbmod
  1495  00EA  3E30               	addlw	48
  1496  00EB  2175  120A  118A   	fcall	_lcdData
  1497                           
  1498                           ;LCD.c: 81: lcdData(':');
  1499  00EE  303A               	movlw	58
  1500  00EF  2175  120A  118A   	fcall	_lcdData
  1501                           
  1502                           ;LCD.c: 84: timeArr[2]=(pTimeArray[1]/10)+0x30;
  1503  00F2  300A               	movlw	10
  1504  00F3  00F2               	movwf	?___lbdiv
  1505  00F4  220F  120A  118A   	fcall	PL5	;call to abstracted procedure
  1506  00F7  217B  120A  118A   	fcall	___lbdiv
  1507  00FA  3E30               	addlw	48
  1508  00FB  00BE               	movwf	DisplayTimeToLCD@timeArr+2
  1509                           
  1510                           ;LCD.c: 85: timeArr[3]=(pTimeArray[1]%10)+0x30;
  1511  00FC  300A               	movlw	10
  1512  00FD  00F2               	movwf	?___lbmod
  1513  00FE  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1514  00FF  3E01               	addlw	1
  1515  0100  0084               	movwf	4
  1516  0101  0800               	movf	0,w
  1517  0102  2196  120A  118A   	fcall	___lbmod
  1518  0105  3E30               	addlw	48
  1519  0106  00BF               	movwf	DisplayTimeToLCD@timeArr+3
  1520                           
  1521                           ;LCD.c: 87: lcdData( (pTimeArray[1]/10)+0x30 );
  1522  0107  300A               	movlw	10
  1523  0108  00F2               	movwf	?___lbdiv
  1524  0109  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1525  010A  3E01               	addlw	1
  1526  010B  0084               	movwf	4
  1527  010C  0800               	movf	0,w
  1528  010D  217B  120A  118A   	fcall	___lbdiv
  1529  0110  3E30               	addlw	48
  1530  0111  2175  120A  118A   	fcall	_lcdData
  1531                           
  1532                           ;LCD.c: 88: lcdData( (pTimeArray[1]%10)+0x30 );
  1533  0114  300A               	movlw	10
  1534  0115  00F2               	movwf	?___lbmod
  1535  0116  220F  120A  118A   	fcall	PL5	;call to abstracted procedure
  1536  0119  2196  120A  118A   	fcall	___lbmod
  1537  011C  3E30               	addlw	48
  1538  011D  2175  120A  118A   	fcall	_lcdData
  1539                           
  1540                           ;LCD.c: 91: lcdData(':');
  1541  0120  303A               	movlw	58
  1542  0121  2175  120A  118A   	fcall	_lcdData
  1543                           
  1544                           ;LCD.c: 94: timeArr[4]=(pTimeArray[0]/10)+0x30;
  1545  0124  300A               	movlw	10
  1546  0125  00F2               	movwf	?___lbdiv
  1547  0126  2217  120A  118A   	fcall	PL10	;call to abstracted procedure
  1548  0129  217B  120A  118A   	fcall	___lbdiv
  1549  012C  3E30               	addlw	48
  1550  012D  00C0               	movwf	DisplayTimeToLCD@timeArr+4
  1551                           
  1552                           ;LCD.c: 95: timeArr[5]=(pTimeArray[0]%10)+0x30;
  1553  012E  300A               	movlw	10
  1554  012F  00F2               	movwf	?___lbmod
  1555  0130  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1556  0131  0084               	movwf	4
  1557  0132  0800               	movf	0,w
  1558  0133  2196  120A  118A   	fcall	___lbmod
  1559  0136  3E30               	addlw	48
  1560  0137  00C1               	movwf	DisplayTimeToLCD@timeArr+5
  1561  0138  300A               	movlw	10
  1562                           
  1563                           ;LCD.c: 96: timeArr[6]='\0';
  1564  0139  01C2               	clrf	DisplayTimeToLCD@timeArr+6
  1565                           
  1566                           ;LCD.c: 97: lcdData( (pTimeArray[0]/10)+0x30 );
  1567  013A  00F2               	movwf	?___lbdiv
  1568  013B  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1569  013C  0084               	movwf	4
  1570  013D  0800               	movf	0,w
  1571  013E  217B  120A  118A   	fcall	___lbdiv
  1572  0141  3E30               	addlw	48
  1573  0142  2175  120A  118A   	fcall	_lcdData
  1574                           
  1575                           ;LCD.c: 98: lcdData( (pTimeArray[0]%10)+0x30 );
  1576  0145  300A               	movlw	10
  1577  0146  00F2               	movwf	?___lbmod
  1578  0147  2217  120A  118A   	fcall	PL10	;call to abstracted procedure
  1579  014A  2196  120A  118A   	fcall	___lbmod
  1580  014D  3E30               	addlw	48
  1581  014E  2175  120A  118A   	fcall	_lcdData
  1582                           
  1583                           ;LCD.c: 101: lcdData(' ');
  1584  0151  3020               	movlw	32
  1585  0152  2175  120A  118A   	fcall	_lcdData
  1586                           
  1587                           ;LCD.c: 104: switch(pTimeArray[3])
  1588  0155  2966               	goto	l5391
  1589  0156                     l5385:	
  1590  0156  3056               	movlw	low (STR_3-__stringbase)
  1591  0157  00F4               	movwf	?_lcdString
  1592  0158  3080               	movlw	128
  1593  0159  00F5               	movwf	?_lcdString+1
  1594  015A  21B2  120A  118A   	fcall	_lcdString
  1595  015D  2973               	goto	l5393
  1596  015E                     l5387:	
  1597  015E  3059               	movlw	low (STR_4-__stringbase)
  1598  015F  00F4               	movwf	?_lcdString
  1599  0160  3080               	movlw	128
  1600  0161  00F5               	movwf	?_lcdString+1
  1601  0162  21B2  120A  118A   	fcall	_lcdString
  1602  0165  2973               	goto	l5393
  1603  0166                     l5391:	
  1604  0166  2230               	call	PL15	;select bank 0
  1605  0167  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  1606  0168  3E03               	addlw	3
  1607  0169  0084               	movwf	4
  1608  016A  1383               	bcf	3,7	;select IRP bank0
  1609  016B  0800               	movf	0,w
  1610                           
  1611                           ; Switch size 1, requested type "space"
  1612                           ; Number of cases is 2, Range of values is 0 to 1
  1613                           ; switch strategies available:
  1614                           ; Name         Instructions Cycles
  1615                           ; simple_byte            7     4 (average)
  1616                           ; direct_byte           14     8 (fixed)
  1617                           ; jumptable            260     6 (fixed)
  1618                           ; rangetable             6     6 (fixed)
  1619                           ; spacedrange           10     9 (fixed)
  1620                           ; locatedrange           2     3 (fixed)
  1621                           ;	Chosen strategy is simple_byte
  1622  016C  3A00               	xorlw	0	; case 0
  1623  016D  1903               	skipnz
  1624  016E  2956               	goto	l5385
  1625  016F  3A01               	xorlw	1	; case 1
  1626  0170  1903               	skipnz
  1627  0171  295E               	goto	l5387
  1628  0172  2973               	goto	l5393
  1629  0173                     l5393:	
  1630                           
  1631                           ;LCD.c: 113: return timeArrPtr;
  1632  0173  0843               	movf	DisplayTimeToLCD@timeArrPtr,w
  1633  0174  0008               	return
  1634  0175                     __end_of_DisplayTimeToLCD:	
  1635  0175                     __ptext918:	
  1636 ;; =============== function _Get_DS1307_RTC_Time ends ============
  1637                           
  1638                           
  1639 ;; *************** function _lcdData *****************
  1640 ;; Defined at:
  1641 ;;		line 22 in file "LCD.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  dataout         1    wreg     unsigned char 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  dataout         1    3[COMMON] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;		None               void
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       0       0       0       0
  1656 ;;      Locals:         1       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0
  1658 ;;      Totals:         1       0       0       0       0
  1659 ;;Total ram usage:        1 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    2
  1662 ;; This function calls:
  1663 ;;		_ToggleEpinOfLCD
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;;		_lcdString
  1667 ;;		_DisplayTimeToLCD
  1668 ;;		_DisplayDateOnLCD
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671  0175                     _lcdData:	
  1672                           
  1673                           ; Regs used in _lcdData: [wreg+status,2+status,0+pclath+cstack]
  1674                           ;lcdData@dataout stored from wreg
  1675  0175  00F3               	movwf	lcdData@dataout
  1676  0176  2230               	call	PL15	;select bank 0
  1677                           
  1678                           ;LCD.c: 23: RC1 = 1;
  1679  0177  1487               	bsf	7,1
  1680                           
  1681                           ;LCD.c: 24: PORTD=dataout;
  1682  0178  0873               	movf	lcdData@dataout,w
  1683  0179  0088               	movwf	8	;volatile
  1684                           
  1685                           ;LCD.c: 25: ToggleEpinOfLCD();
  1686  017A  29FB               	ljmp	l5249
  1687  017B                     __end_of_lcdData:	
  1688  017B                     __ptext927:	
  1689 ;; =============== function ___lbmod ends ============
  1690                           
  1691                           
  1692 ;; *************** function ___lbdiv *****************
  1693 ;; Defined at:
  1694 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  dividend        1    wreg     unsigned char 
  1697 ;;  divisor         1    2[COMMON] unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  dividend        1    3[COMMON] unsigned char 
  1700 ;;  quotient        1    5[COMMON] unsigned char 
  1701 ;;  counter         1    4[COMMON] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      unsigned char 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 100/0
  1708 ;;		On exit  : 100/0
  1709 ;;		Unchanged: FFEFF/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         1       0       0       0       0
  1712 ;;      Locals:         3       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0
  1714 ;;      Totals:         4       0       0       0       0
  1715 ;;Total ram usage:        4 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_DisplayTimeToLCD
  1722 ;;		_DisplayDateOnLCD
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725  017B                     ___lbdiv:	
  1726                           
  1727                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  1728                           ;___lbdiv@dividend stored from wreg
  1729  017B  00F3               	movwf	___lbdiv@dividend
  1730  017C  01F5               	clrf	___lbdiv@quotient
  1731  017D  0872               	movf	___lbdiv@divisor,w
  1732  017E  1903               	btfsc	3,2
  1733  017F  2994               	goto	l5125
  1734  0180  01F4               	clrf	___lbdiv@counter
  1735  0181                     l5111:	
  1736  0181  0AF4               	incf	___lbdiv@counter,f
  1737  0182  1BF2               	btfsc	___lbdiv@divisor,7
  1738  0183  2987               	goto	l3701
  1739  0184  1003               	clrc
  1740  0185  0DF2               	rlf	___lbdiv@divisor,f
  1741  0186  2981               	goto	l5111
  1742  0187                     l3701:	
  1743  0187  1003               	clrc
  1744  0188  0DF5               	rlf	___lbdiv@quotient,f
  1745  0189  0872               	movf	___lbdiv@divisor,w
  1746  018A  0273               	subwf	___lbdiv@dividend,w
  1747  018B  1C03               	skipc
  1748  018C  2991               	goto	L4
  1749  018D  0872               	movf	___lbdiv@divisor,w
  1750  018E  02F3               	subwf	___lbdiv@dividend,f
  1751  018F  1475               	bsf	___lbdiv@quotient,0
  1752  0190  1003               	clrc
  1753  0191                     L4:	
  1754  0191  0CF2               	rrf	___lbdiv@divisor,f
  1755  0192  0BF4               	decfsz	___lbdiv@counter,f
  1756  0193  2987               	goto	l3701
  1757  0194                     l5125:	
  1758  0194  0875               	movf	___lbdiv@quotient,w
  1759  0195  0008               	return
  1760  0196                     __end_of___lbdiv:	
  1761  0196                     __ptext926:	
  1762 ;; =============== function ___aldiv ends ============
  1763                           
  1764                           
  1765 ;; *************** function ___lbmod *****************
  1766 ;; Defined at:
  1767 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  dividend        1    wreg     unsigned char 
  1770 ;;  divisor         1    2[COMMON] unsigned char 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  dividend        1    4[COMMON] unsigned char 
  1773 ;;  rem             1    6[COMMON] unsigned char 
  1774 ;;  counter         1    5[COMMON] unsigned char 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, status,2, status,0
  1779 ;; Tracked objects:
  1780 ;;		On entry : 100/0
  1781 ;;		On exit  : 100/0
  1782 ;;		Unchanged: FFEFF/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1784 ;;      Params:         1       0       0       0       0
  1785 ;;      Locals:         3       0       0       0       0
  1786 ;;      Temps:          1       0       0       0       0
  1787 ;;      Totals:         5       0       0       0       0
  1788 ;;Total ram usage:        5 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    1
  1791 ;; This function calls:
  1792 ;;		Nothing
  1793 ;; This function is called by:
  1794 ;;		_DisplayTimeToLCD
  1795 ;;		_DisplayDateOnLCD
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798  0196                     ___lbmod:	
  1799                           
  1800                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  1801                           ;___lbmod@dividend stored from wreg
  1802  0196  00F4               	movwf	___lbmod@dividend
  1803  0197  3008               	movlw	8
  1804  0198  00F5               	movwf	___lbmod@counter
  1805  0199  01F6               	clrf	___lbmod@rem
  1806  019A                     l5133:	
  1807  019A  0874               	movf	___lbmod@dividend,w
  1808  019B  00F3               	movwf	??___lbmod
  1809  019C  3007               	movlw	7
  1810  019D  1003               	clrc
  1811  019E                     L3:	
  1812  019E  0CF3               	rrf	??___lbmod,f
  1813  019F  3EFF               	addlw	-1
  1814  01A0  1003               	clrc
  1815  01A1  1D03               	skipz
  1816  01A2  299E               	goto	L3
  1817  01A3  0D76               	rlf	___lbmod@rem,w
  1818  01A4  0473               	iorwf	??___lbmod,w
  1819  01A5  00F6               	movwf	___lbmod@rem
  1820  01A6  1003               	clrc
  1821  01A7  0DF4               	rlf	___lbmod@dividend,f
  1822  01A8  0872               	movf	___lbmod@divisor,w
  1823  01A9  0276               	subwf	___lbmod@rem,w
  1824  01AA  1C03               	skipc
  1825  01AB  29AE               	goto	l5141
  1826  01AC  0872               	movf	___lbmod@divisor,w
  1827  01AD  02F6               	subwf	___lbmod@rem,f
  1828  01AE                     l5141:	
  1829  01AE  0BF5               	decfsz	___lbmod@counter,f
  1830  01AF  299A               	goto	l5133
  1831  01B0  0876               	movf	___lbmod@rem,w
  1832  01B1  0008               	return
  1833  01B2                     __end_of___lbmod:	
  1834  01B2                     __ptext913:	
  1835 ;; =============== function _DisplayTimeToLCD ends ============
  1836                           
  1837                           
  1838 ;; *************** function _lcdString *****************
  1839 ;; Defined at:
  1840 ;;		line 49 in file "LCD.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  d               2    4[COMMON] PTR unsigned char 
  1843 ;;		 -> STR_12(4), STR_11(4), STR_10(4), STR_9(4), 
  1844 ;;		 -> STR_8(4), STR_7(4), STR_6(4), STR_5(4), 
  1845 ;;		 -> STR_4(3), STR_3(3), a(21), 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  i               2    6[COMMON] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;		None               void
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 60/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         2       0       0       0       0
  1858 ;;      Locals:         2       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0
  1860 ;;      Totals:         4       0       0       0       0
  1861 ;;Total ram usage:        4 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    3
  1864 ;; This function calls:
  1865 ;;		_lcdData
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;;		_DisplayTimeToLCD
  1869 ;;		_DisplayDateOnLCD
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872  01B2                     _lcdString:	
  1873  01B2                     l5341:	
  1874                           ; Regs used in _lcdString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1875                           
  1876                           
  1877                           ;LCD.c: 50: int i;
  1878                           ;LCD.c: 51: for(i=0;d[i]!='\0';i++)
  1879  01B2  01F6               	clrf	lcdString@i
  1880  01B3  01F7               	clrf	lcdString@i+1
  1881  01B4                     l5347:	
  1882  01B4  0876               	movf	lcdString@i,w
  1883  01B5  0774               	addwf	lcdString@d,w
  1884  01B6  0084               	movwf	4
  1885  01B7  0875               	movf	lcdString@d+1,w
  1886  01B8  1803               	skipnc
  1887  01B9  0A75               	incf	lcdString@d+1,w
  1888  01BA  2230               	call	PL15	;select bank 0
  1889  01BB  00FF               	movwf	127
  1890  01BC  120A  118A  2502   	fcall	stringtab
      +       120A  118A         
  1891  01C1  3800               	iorlw	0
  1892  01C2  1903               	btfsc	3,2
  1893  01C3  0008               	return
  1894                           
  1895                           ;LCD.c: 52: {
  1896                           ;LCD.c: 53: lcdData(d[i]);
  1897  01C4  0876               	movf	lcdString@i,w
  1898  01C5  0774               	addwf	lcdString@d,w
  1899  01C6  0084               	movwf	4
  1900  01C7  0875               	movf	lcdString@d+1,w
  1901  01C8  1803               	skipnc
  1902  01C9  0A75               	incf	lcdString@d+1,w
  1903  01CA  00FF               	movwf	127
  1904  01CB  120A  118A  2502   	fcall	stringtab
      +       120A  118A         
  1905  01D0  2175  120A  118A   	fcall	_lcdData
  1906  01D3  0AF6               	incf	lcdString@i,f
  1907  01D4  1903               	skipnz
  1908  01D5  0AF7               	incf	lcdString@i+1,f
  1909  01D6  29B4               	goto	l5347
  1910  01D7                     __end_of_lcdString:	
  1911  01D7                     __ptext915:	
  1912 ;; =============== function _lcdClr ends ============
  1913                           
  1914                           
  1915 ;; *************** function _InitLCD *****************
  1916 ;; Defined at:
  1917 ;;		line 30 in file "LCD.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 17F/20
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    3
  1938 ;; This function calls:
  1939 ;;		_lcdCmd
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944  01D7                     _InitLCD:	
  1945                           
  1946                           ;LCD.c: 31: RC2 = 0;
  1947                           
  1948                           ; Regs used in _InitLCD: [wreg+status,2+status,0+pclath+cstack]
  1949  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1950  01D8  1107               	bcf	7,2
  1951                           
  1952                           ;LCD.c: 32: RC1 = 0;
  1953  01D9  1087               	bcf	7,1
  1954                           
  1955                           ;LCD.c: 33: PORTD = 0;
  1956  01DA  0188               	clrf	8	;volatile
  1957                           
  1958                           ;LCD.c: 34: TRISC2 = 0;
  1959  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1960  01DC  1107               	bcf	7,2
  1961                           
  1962                           ;LCD.c: 35: TRISC1 = 0;
  1963  01DD  1087               	bcf	7,1
  1964                           
  1965                           ;LCD.c: 36: TRISD = 0;
  1966  01DE  0188               	clrf	8	;volatile
  1967                           
  1968                           ;LCD.c: 38: lcdCmd(0x30);
  1969  01DF  3030               	movlw	48
  1970  01E0  21F5  120A  118A   	fcall	_lcdCmd
  1971                           
  1972                           ;LCD.c: 39: lcdCmd(0x38);
  1973  01E3  3038               	movlw	56
  1974  01E4  21F5  120A  118A   	fcall	_lcdCmd
  1975                           
  1976                           ;LCD.c: 40: lcdCmd(0x0C);
  1977  01E7  300C               	movlw	12
  1978  01E8  21F5  120A  118A   	fcall	_lcdCmd
  1979                           
  1980                           ;LCD.c: 41: lcdCmd(0x01);
  1981  01EB  3001               	movlw	1
  1982  01EC  21F5  120A  118A   	fcall	_lcdCmd
  1983                           
  1984                           ;LCD.c: 42: lcdCmd(0x06);
  1985  01EF  3006               	movlw	6
  1986  01F0  21F5  120A  118A   	fcall	_lcdCmd
  1987                           
  1988                           ;LCD.c: 43: lcdCmd(0x80);
  1989  01F3  3080               	movlw	128
  1990  01F4  29F5               	ljmp	_lcdCmd
  1991  01F5                     __end_of_InitLCD:	
  1992  01F5                     __ptext919:	
  1993 ;; =============== function _lcdData ends ============
  1994                           
  1995                           
  1996 ;; *************** function _lcdCmd *****************
  1997 ;; Defined at:
  1998 ;;		line 14 in file "LCD.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  cmdout          1    wreg     unsigned char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  cmdout          1    3[COMMON] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;		None               void
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       0       0       0       0
  2013 ;;      Locals:         1       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0
  2015 ;;      Totals:         1       0       0       0       0
  2016 ;;Total ram usage:        1 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    2
  2019 ;; This function calls:
  2020 ;;		_ToggleEpinOfLCD
  2021 ;; This function is called by:
  2022 ;;		_main
  2023 ;;		_InitLCD
  2024 ;;		_lcdClr
  2025 ;;		_DisplayTimeToLCD
  2026 ;;		_DisplayDateOnLCD
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029  01F5                     _lcdCmd:	
  2030                           
  2031                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  2032                           ;lcdCmd@cmdout stored from wreg
  2033  01F5  00F3               	movwf	lcdCmd@cmdout
  2034  01F6  2230               	call	PL15	;select bank 0
  2035                           
  2036                           ;LCD.c: 15: RC1 = 0;
  2037  01F7  1087               	bcf	7,1
  2038                           
  2039                           ;LCD.c: 16: PORTD=cmdout;
  2040  01F8  0873               	movf	lcdCmd@cmdout,w
  2041  01F9  0088               	movwf	8	;volatile
  2042                           
  2043                           ;LCD.c: 17: ToggleEpinOfLCD();
  2044  01FA  29FB               	ljmp	l5249
  2045  01FB                     __end_of_lcdCmd:	
  2046  01FB                     __ptext920:	
  2047 ;; =============== function _lcdCmd ends ============
  2048                           
  2049                           
  2050 ;; *************** function _ToggleEpinOfLCD *****************
  2051 ;; Defined at:
  2052 ;;		line 5 in file "LCD.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		wreg
  2061 ;; Tracked objects:
  2062 ;;		On entry : 60/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0
  2068 ;;      Temps:          1       0       0       0       0
  2069 ;;      Totals:         1       0       0       0       0
  2070 ;;Total ram usage:        1 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_lcdCmd
  2077 ;;		_lcdData
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080  01FB                     _ToggleEpinOfLCD:	
  2081  01FB                     l5249:	
  2082                           ; Regs used in _ToggleEpinOfLCD: [wreg]
  2083                           
  2084  01FB  3053               	movlw	83
  2085                           
  2086                           ;LCD.c: 6: RC2 = 1;
  2087  01FC  1507               	bsf	7,2
  2088                           
  2089                           ;LCD.c: 7: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2090  01FD  00F2               	movwf	??_ToggleEpinOfLCD
  2091  01FE                     u1087:	
  2092  01FE  0BF2               	decfsz	??_ToggleEpinOfLCD,f
  2093  01FF  29FE               	goto	u1087
  2094  0200  2230               	call	PL15	;select bank 0
  2095                           
  2096                           ;LCD.c: 8: RC2 = 0;
  2097  0201  3053               	movlw	83
  2098  0202  1107               	bcf	7,2
  2099                           
  2100                           ;LCD.c: 9: _delay((unsigned long)((50)*(20000000/4000000.0)));
  2101  0203  00F2               	movwf	??_ToggleEpinOfLCD
  2102  0204                     u1097:	
  2103  0204  0BF2               	decfsz	??_ToggleEpinOfLCD,f
  2104  0205  2A04               	goto	u1097
  2105  0206  0008               	return
  2106  0207                     __end_of_ToggleEpinOfLCD:	
  2107  0207                     PL4:	
  2108  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0209  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  2111  020A  3E02               	addlw	2
  2112  020B  0084               	movwf	4
  2113  020C  1383               	bcf	3,7	;select IRP bank0
  2114  020D  0800               	movf	0,w
  2115  020E  0008               	return
  2116  020F                     PL5:	
  2117  020F  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0210  1303               	bcf	3,6	;RP1=0, select bank0
  2119  0211  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  2120  0212  3E01               	addlw	1
  2121  0213  0084               	movwf	4
  2122  0214  1383               	bcf	3,7	;select IRP bank0
  2123  0215  0800               	movf	0,w
  2124  0216  0008               	return
  2125  0217                     PL10:	
  2126  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0219  0844               	movf	DisplayTimeToLCD@pTimeArray,w
  2129  021A  0084               	movwf	4
  2130  021B  1383               	bcf	3,7	;select IRP bank0
  2131  021C  0800               	movf	0,w
  2132  021D  0008               	return
  2133  021E                     PL12:	
  2134  021E  0878               	movf	DisplayDateOnLCD@pDateArray,w
  2135  021F  3E03               	addlw	3
  2136  0220  0084               	movwf	4
  2137  0221  1383               	bcf	3,7	;select IRP bank0
  2138  0222  0800               	movf	0,w
  2139  0223  0008               	return
  2140  0224                     PL13:	
  2141  0224  0878               	movf	DisplayDateOnLCD@pDateArray,w
  2142  0225  3E02               	addlw	2
  2143  0226  0084               	movwf	4
  2144  0227  1383               	bcf	3,7	;select IRP bank0
  2145  0228  0800               	movf	0,w
  2146  0229  0008               	return
  2147  022A                     PL14:	
  2148  022A  0878               	movf	DisplayDateOnLCD@pDateArray,w
  2149  022B  3E01               	addlw	1
  2150  022C  0084               	movwf	4
  2151  022D  1383               	bcf	3,7	;select IRP bank0
  2152  022E  0800               	movf	0,w
  2153  022F  0008               	return
  2154  0230                     PL15:	
  2155  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0232  0008               	return
  2158                           
  2159                           	psect	text916
  2160  0342                     __ptext916:	
  2161 ;; =============== function _InitLCD ends ============
  2162                           
  2163                           
  2164 ;; *************** function _Get_DS1307_RTC_Date *****************
  2165 ;; Defined at:
  2166 ;;		line 229 in file "DS13071.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      PTR unsigned char 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 60/0
  2177 ;;		On exit  : 160/0
  2178 ;;		Unchanged: FFE9F/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2180 ;;      Params:         0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0
  2182 ;;      Temps:          1       0       0       0       0
  2183 ;;      Totals:         1       0       0       0       0
  2184 ;;Total ram usage:        1 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		_Read_Bytes_From_DS1307_RTC
  2189 ;;		___bmul
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194  0342                     _Get_DS1307_RTC_Date:	
  2195                           
  2196                           ;DS13071.c: 231: Read_Bytes_From_DS1307_RTC(0x03, pRTCArray, 4);
  2197                           
  2198                           ; Regs used in _Get_DS1307_RTC_Date: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2199  0342  3059               	movlw	_pRTCArray& (0+255)
  2200  0343  00F3               	movwf	?_Read_Bytes_From_DS1307_RTC
  2201  0344  3004               	movlw	4
  2202  0345  00F4               	movwf	?_Read_Bytes_From_DS1307_RTC+1
  2203  0346  3003               	movlw	3
  2204  0347  01F5               	clrf	?_Read_Bytes_From_DS1307_RTC+2
  2205  0348  23BE  120A  118A   	fcall	_Read_Bytes_From_DS1307_RTC
  2206                           
  2207                           ;DS13071.c: 234: Temp = pRTCArray[1];
  2208  034B  085A               	movf	_pRTCArray+1,w
  2209                           
  2210                           ;DS13071.c: 235: pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  2211  034C  243A  120A  118A   	fcall	PL8	;call to abstracted procedure
  2212  034F  23B0  120A  118A   	fcall	___bmul
  2213  0352  00FA               	movwf	??_Get_DS1307_RTC_Date
  2214  0353  087B               	movf	_Temp,w
  2215  0354  390F               	andlw	15
  2216  0355  077A               	addwf	??_Get_DS1307_RTC_Date,w
  2217  0356  00DA               	movwf	_pRTCArray+1
  2218                           
  2219                           ;DS13071.c: 238: Temp = pRTCArray[2];
  2220                           
  2221                           ;DS13071.c: 239: pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  2222  0357  2433  120A  118A   	fcall	PL3	;call to abstracted procedure
  2223  035A  23B0  120A  118A   	fcall	___bmul
  2224  035D  00FA               	movwf	??_Get_DS1307_RTC_Date
  2225  035E  087B               	movf	_Temp,w
  2226  035F  390F               	andlw	15
  2227  0360  077A               	addwf	??_Get_DS1307_RTC_Date,w
  2228  0361  00DB               	movwf	_pRTCArray+2
  2229                           
  2230                           ;DS13071.c: 242: Temp = pRTCArray[3];
  2231  0362  085C               	movf	_pRTCArray+3,w
  2232                           
  2233                           ;DS13071.c: 243: pRTCArray[3] = (Temp>>4)*10 + (Temp&0x0F);
  2234  0363  243A  120A  118A   	fcall	PL8	;call to abstracted procedure
  2235  0366  23B0               	fcall	___bmul
  2236  0367  00FA               	movwf	??_Get_DS1307_RTC_Date
  2237  0368  087B               	movf	_Temp,w
  2238  0369  390F               	andlw	15
  2239  036A  077A               	addwf	??_Get_DS1307_RTC_Date,w
  2240  036B  00DC               	movwf	_pRTCArray+3
  2241                           
  2242                           ;DS13071.c: 245: return pRTCArray;
  2243  036C  3459               	retlw	_pRTCArray& (0+255)
  2244  036D                     __end_of_Get_DS1307_RTC_Date:	
  2245  036D                     __ptext917:	
  2246 ;; =============== function _Get_DS1307_RTC_Date ends ============
  2247                           
  2248                           
  2249 ;; *************** function _Get_DS1307_RTC_Time *****************
  2250 ;; Defined at:
  2251 ;;		line 164 in file "DS13071.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      PTR unsigned char 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 160/0
  2263 ;;		Unchanged: FFE9F/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0
  2267 ;;      Temps:          1       0       0       0       0
  2268 ;;      Totals:         1       0       0       0       0
  2269 ;;Total ram usage:        1 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    3
  2272 ;; This function calls:
  2273 ;;		_Read_Bytes_From_DS1307_RTC
  2274 ;;		___bmul
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279  036D                     _Get_DS1307_RTC_Time:	
  2280                           
  2281                           ;DS13071.c: 166: Read_Bytes_From_DS1307_RTC(0x00, pRTCArray, 3);
  2282                           
  2283                           ; Regs used in _Get_DS1307_RTC_Time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2284  036D  3059               	movlw	_pRTCArray& (0+255)
  2285  036E  00F3               	movwf	?_Read_Bytes_From_DS1307_RTC
  2286  036F  3003               	movlw	3
  2287  0370  00F4               	movwf	?_Read_Bytes_From_DS1307_RTC+1
  2288  0371  3000               	movlw	0
  2289  0372  01F5               	clrf	?_Read_Bytes_From_DS1307_RTC+2
  2290  0373  23BE  120A  118A   	fcall	_Read_Bytes_From_DS1307_RTC
  2291                           
  2292                           ;DS13071.c: 169: Temp = pRTCArray[0];
  2293  0376  0859               	movf	_pRTCArray,w
  2294  0377  00FB               	movwf	_Temp
  2295                           
  2296                           ;DS13071.c: 170: pRTCArray[0] = ((Temp&0x7F)>>4)*10 + (Temp&0x0F);
  2297  0378  300A               	movlw	10
  2298  0379  00F2               	movwf	?___bmul
  2299  037A  0E7B               	swapf	_Temp,w
  2300  037B  390F               	andlw	15
  2301  037C  3907               	andlw	7
  2302  037D  23B0  120A  118A   	fcall	___bmul
  2303  0380  00FA               	movwf	??_Get_DS1307_RTC_Time
  2304  0381  087B               	movf	_Temp,w
  2305  0382  390F               	andlw	15
  2306  0383  077A               	addwf	??_Get_DS1307_RTC_Time,w
  2307  0384  00D9               	movwf	_pRTCArray
  2308                           
  2309                           ;DS13071.c: 173: Temp = pRTCArray[1];
  2310  0385  085A               	movf	_pRTCArray+1,w
  2311                           
  2312                           ;DS13071.c: 174: pRTCArray[1] = (Temp>>4)*10 + (Temp&0x0F);
  2313  0386  243A  120A  118A   	fcall	PL8	;call to abstracted procedure
  2314  0389  23B0  120A  118A   	fcall	___bmul
  2315  038C  00FA               	movwf	??_Get_DS1307_RTC_Time
  2316  038D  087B               	movf	_Temp,w
  2317  038E  390F               	andlw	15
  2318  038F  077A               	addwf	??_Get_DS1307_RTC_Time,w
  2319  0390  00DA               	movwf	_pRTCArray+1
  2320                           
  2321                           ;DS13071.c: 177: if(pRTCArray[2]&0x40)
  2322  0391  1F5B               	btfss	_pRTCArray+2,6
  2323  0392  2BA4               	goto	l5289
  2324                           
  2325                           ;DS13071.c: 178: {
  2326                           ;DS13071.c: 179: if(pRTCArray[2]&0x20)
  2327  0393  1EDB               	btfss	_pRTCArray+2,5
  2328  0394  2B98               	goto	l5283
  2329                           
  2330                           ;DS13071.c: 180: pRTCArray[3] = 1;
  2331  0395  01DC               	clrf	_pRTCArray+3
  2332  0396  0ADC               	incf	_pRTCArray+3,f
  2333  0397  2B99               	goto	l5285
  2334  0398                     l5283:	
  2335                           
  2336                           ;DS13071.c: 181: else
  2337                           ;DS13071.c: 182: pRTCArray[3] = 0;
  2338  0398  01DC               	clrf	_pRTCArray+3
  2339  0399                     l5285:	
  2340                           
  2341                           ;DS13071.c: 184: Temp = pRTCArray[2];
  2342                           
  2343                           ;DS13071.c: 185: pRTCArray[2] = ((Temp&0x1F)>>4)*10 + (Temp&0x0F);
  2344  0399  2433  120A  118A   	fcall	PL3	;call to abstracted procedure
  2345  039C  3901               	andlw	1
  2346  039D  23B0               	fcall	___bmul
  2347  039E  00FA               	movwf	??_Get_DS1307_RTC_Time
  2348  039F  087B               	movf	_Temp,w
  2349  03A0  390F               	andlw	15
  2350  03A1  077A               	addwf	??_Get_DS1307_RTC_Time,w
  2351  03A2  00DB               	movwf	_pRTCArray+2
  2352                           
  2353                           ;DS13071.c: 186: }
  2354  03A3  3459               	retlw	_pRTCArray& (0+255)
  2355  03A4                     l5289:	
  2356                           
  2357                           ;DS13071.c: 187: else
  2358                           ;DS13071.c: 188: {
  2359                           ;DS13071.c: 189: Temp = pRTCArray[2];
  2360                           
  2361                           ;DS13071.c: 190: pRTCArray[2] = (Temp>>4)*10 + (Temp&0x0F);
  2362  03A4  2433  120A  118A   	fcall	PL3	;call to abstracted procedure
  2363  03A7  23B0               	fcall	___bmul
  2364  03A8  00FA               	movwf	??_Get_DS1307_RTC_Time
  2365  03A9  087B               	movf	_Temp,w
  2366  03AA  390F               	andlw	15
  2367  03AB  077A               	addwf	??_Get_DS1307_RTC_Time,w
  2368  03AC  00DB               	movwf	_pRTCArray+2
  2369                           
  2370                           ;DS13071.c: 191: pRTCArray[3] = 2;
  2371  03AD  3002               	movlw	2
  2372  03AE  00DC               	movwf	_pRTCArray+3
  2373                           
  2374                           ;DS13071.c: 192: }
  2375                           ;DS13071.c: 194: return pRTCArray;
  2376  03AF  3459               	retlw	_pRTCArray& (0+255)
  2377  03B0                     __end_of_Get_DS1307_RTC_Time:	
  2378  03B0                     __ptext928:	
  2379 ;; =============== function ___lbdiv ends ============
  2380                           
  2381                           
  2382 ;; *************** function ___bmul *****************
  2383 ;; Defined at:
  2384 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  multiplier      1    wreg     unsigned char 
  2387 ;;  multiplicand    1    2[COMMON] unsigned char 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  multiplier      1    4[COMMON] unsigned char 
  2390 ;;  product         1    3[COMMON] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      unsigned char 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 160/0
  2397 ;;		On exit  : 160/0
  2398 ;;		Unchanged: FFE9F/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         1       0       0       0       0
  2401 ;;      Locals:         2       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         3       0       0       0       0
  2404 ;;Total ram usage:        3 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_Get_DS1307_RTC_Time
  2411 ;;		_Get_DS1307_RTC_Date
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414  03B0                     ___bmul:	
  2415                           
  2416                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2417                           ;___bmul@multiplier stored from wreg
  2418  03B0  00F4               	movwf	___bmul@multiplier
  2419  03B1  01F3               	clrf	___bmul@product
  2420  03B2                     l5091:	
  2421  03B2  0872               	movf	___bmul@multiplicand,w
  2422  03B3  1874               	btfsc	___bmul@multiplier,0
  2423  03B4  07F3               	addwf	___bmul@product,f
  2424  03B5  1003               	clrc
  2425  03B6  0DF2               	rlf	___bmul@multiplicand,f
  2426  03B7  1003               	clrc
  2427  03B8  0CF4               	rrf	___bmul@multiplier,f
  2428  03B9  08F4               	movf	___bmul@multiplier,f
  2429  03BA  1D03               	skipz
  2430  03BB  2BB2               	goto	l5091
  2431  03BC  0873               	movf	___bmul@product,w
  2432  03BD  0008               	return
  2433  03BE                     __end_of___bmul:	
  2434  03BE                     __ptext921:	
  2435 ;; =============== function _ToggleEpinOfLCD ends ============
  2436                           
  2437                           
  2438 ;; *************** function _Read_Bytes_From_DS1307_RTC *****************
  2439 ;; Defined at:
  2440 ;;		line 96 in file "DS13071.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  Address         1    wreg     unsigned char 
  2443 ;;  pData           1    3[COMMON] PTR unsigned char 
  2444 ;;		 -> pRTCArray(4), 
  2445 ;;  NoOfBytes       2    4[COMMON] unsigned int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  Address         1    7[COMMON] unsigned char 
  2448 ;;  i               2    8[COMMON] unsigned int 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;		None               void
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 160/0
  2456 ;;		Unchanged: FFE9F/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2458 ;;      Params:         3       0       0       0       0
  2459 ;;      Locals:         3       0       0       0       0
  2460 ;;      Temps:          1       0       0       0       0
  2461 ;;      Totals:         7       0       0       0       0
  2462 ;;Total ram usage:        7 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:    2
  2465 ;; This function calls:
  2466 ;;		_I2C_Start
  2467 ;;		_I2C_Write_Byte
  2468 ;;		_I2C_ReStart
  2469 ;;		_I2C_Read_Byte
  2470 ;;		_I2C_Send_ACK
  2471 ;;		_I2C_Send_NACK
  2472 ;;		_I2C_Stop
  2473 ;; This function is called by:
  2474 ;;		_Get_DS1307_RTC_Time
  2475 ;;		_Get_DS1307_RTC_Date
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478  03BE                     _Read_Bytes_From_DS1307_RTC:	
  2479                           
  2480                           ; Regs used in _Read_Bytes_From_DS1307_RTC: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2481                           ;Read_Bytes_From_DS1307_RTC@Address stored from wreg
  2482  03BE  00F7               	movwf	Read_Bytes_From_DS1307_RTC@Address
  2483                           
  2484                           ;DS13071.c: 97: unsigned int i;
  2485                           ;DS13071.c: 99: I2C_Start();
  2486  03BF  240D  120A  118A   	fcall	_I2C_Start
  2487                           
  2488                           ;DS13071.c: 102: I2C_Write_Byte(0xD0 + 0) == 1;
  2489  03C2  30D0               	movlw	208
  2490  03C3  23F7  120A  118A   	fcall	_I2C_Write_Byte
  2491                           
  2492                           ;DS13071.c: 105: I2C_Write_Byte(Address);
  2493  03C6  0877               	movf	Read_Bytes_From_DS1307_RTC@Address,w
  2494  03C7  23F7  120A  118A   	fcall	_I2C_Write_Byte
  2495                           
  2496                           ;DS13071.c: 106: I2C_ReStart();
  2497  03CA  2415  120A  118A   	fcall	_I2C_ReStart
  2498                           
  2499                           ;DS13071.c: 109: I2C_Write_Byte(0xD0 + 1);
  2500  03CD  30D1               	movlw	209
  2501  03CE  23F7  120A  118A   	fcall	_I2C_Write_Byte
  2502                           
  2503                           ;DS13071.c: 111: pData[0] = I2C_Read_Byte();
  2504  03D1  0873               	movf	Read_Bytes_From_DS1307_RTC@pData,w
  2505  03D2  0084               	movwf	4
  2506  03D3  2405  120A  118A   	fcall	_I2C_Read_Byte
  2507  03D6  1383               	bcf	3,7	;select IRP bank0
  2508  03D7  0080               	movwf	0
  2509                           
  2510                           ;DS13071.c: 113: for(i=1;i<NoOfBytes;i++)
  2511  03D8  01F8               	clrf	Read_Bytes_From_DS1307_RTC@i
  2512  03D9  0AF8               	incf	Read_Bytes_From_DS1307_RTC@i,f
  2513  03DA  01F9               	clrf	Read_Bytes_From_DS1307_RTC@i+1
  2514  03DB                     l5245:	
  2515  03DB  0875               	movf	Read_Bytes_From_DS1307_RTC@NoOfBytes+1,w
  2516  03DC  0279               	subwf	Read_Bytes_From_DS1307_RTC@i+1,w
  2517  03DD  1D03               	skipz
  2518  03DE  2BE1               	goto	u805
  2519  03DF  0874               	movf	Read_Bytes_From_DS1307_RTC@NoOfBytes,w
  2520  03E0  0278               	subwf	Read_Bytes_From_DS1307_RTC@i,w
  2521  03E1                     u805:	
  2522  03E1  1803               	btfsc	3,0
  2523  03E2  2BF3               	goto	l5247
  2524                           
  2525                           ;DS13071.c: 114: {
  2526                           ;DS13071.c: 115: I2C_Send_ACK();
  2527  03E3  241B  120A  118A   	fcall	_I2C_Send_ACK
  2528                           
  2529                           ;DS13071.c: 116: pData[i] = I2C_Read_Byte();
  2530  03E6  0878               	movf	Read_Bytes_From_DS1307_RTC@i,w
  2531  03E7  0773               	addwf	Read_Bytes_From_DS1307_RTC@pData,w
  2532  03E8  00F6               	movwf	??_Read_Bytes_From_DS1307_RTC
  2533  03E9  0876               	movf	??_Read_Bytes_From_DS1307_RTC,w
  2534  03EA  0084               	movwf	4
  2535  03EB  2405  120A  118A   	fcall	_I2C_Read_Byte
  2536  03EE  0080               	movwf	0
  2537  03EF  0AF8               	incf	Read_Bytes_From_DS1307_RTC@i,f
  2538  03F0  1903               	skipnz
  2539  03F1  0AF9               	incf	Read_Bytes_From_DS1307_RTC@i+1,f
  2540  03F2  2BDB               	goto	l5245
  2541  03F3                     l5247:	
  2542                           
  2543                           ;DS13071.c: 117: }
  2544                           ;DS13071.c: 119: I2C_Send_NACK();
  2545  03F3  242B  120A  118A   	fcall	_I2C_Send_NACK
  2546                           
  2547                           ;DS13071.c: 120: I2C_Stop();
  2548  03F6  2C24               	ljmp	l5075
  2549  03F7                     __end_of_Read_Bytes_From_DS1307_RTC:	
  2550  03F7                     __ptext934:	
  2551 ;; =============== function _I2C_Stop ends ============
  2552                           
  2553                           
  2554 ;; *************** function _I2C_Write_Byte *****************
  2555 ;; Defined at:
  2556 ;;		line 73 in file "I2C.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  Byte            1    wreg     unsigned char 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  Byte            1    2[COMMON] unsigned char 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;		None               void
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 40/0
  2567 ;;		On exit  : 60/20
  2568 ;;		Unchanged: FFF9F/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         0       0       0       0       0
  2571 ;;      Locals:         1       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0
  2573 ;;      Totals:         1       0       0       0       0
  2574 ;;Total ram usage:        1 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    1
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_Read_Bytes_From_DS1307_RTC
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583  03F7                     _I2C_Write_Byte:	
  2584                           
  2585                           ; Regs used in _I2C_Write_Byte: [wreg+status,2+status,0]
  2586                           ;I2C_Write_Byte@Byte stored from wreg
  2587  03F7  00F2               	movwf	I2C_Write_Byte@Byte
  2588                           
  2589                           ;I2C.c: 74: SSPBUF = Byte;
  2590  03F8  0872               	movf	I2C_Write_Byte@Byte,w
  2591  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2592  03FA  0093               	movwf	19	;volatile
  2593  03FB                     l2254:	
  2594                           ;I2C.c: 75: while(!SSPIF);
  2595                           
  2596  03FB  1D8C               	btfss	12,3
  2597  03FC  2BFB               	goto	l2254
  2598                           
  2599                           ;I2C.c: 76: SSPIF = 0;
  2600  03FD  118C               	bcf	12,3
  2601                           
  2602                           ;I2C.c: 78: return ACKSTAT;
  2603  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2604  03FF  1B11               	btfsc	17,6
  2605  0400  2C03               	goto	l5071
  2606  0401  1003               	clrc
  2607  0402  0008               	return
  2608  0403                     l5071:	
  2609  0403  1403               	setc
  2610  0404  0008               	return
  2611  0405                     __end_of_I2C_Write_Byte:	
  2612  0405                     __ptext931:	
  2613 ;; =============== function _I2C_Send_NACK ends ============
  2614                           
  2615                           
  2616 ;; *************** function _I2C_Read_Byte *****************
  2617 ;; Defined at:
  2618 ;;		line 84 in file "I2C.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      unsigned char 
  2625 ;; Registers used:
  2626 ;;		wreg
  2627 ;; Tracked objects:
  2628 ;;		On entry : 40/20
  2629 ;;		On exit  : 60/0
  2630 ;;		Unchanged: FFF9F/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_Read_Bytes_From_DS1307_RTC
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645  0405                     _I2C_Read_Byte:	
  2646                           
  2647                           ;I2C.c: 85: RCEN = 1;
  2648                           
  2649                           ; Regs used in _I2C_Read_Byte: [wreg]
  2650  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0406  1591               	bsf	17,3
  2652  0407                     l2260:	
  2653                           ;I2C.c: 86: while(!SSPIF);
  2654                           
  2655  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0408  1D8C               	btfss	12,3
  2657  0409  2C07               	goto	l2260
  2658                           
  2659                           ;I2C.c: 87: SSPIF = 0;
  2660  040A  118C               	bcf	12,3
  2661                           
  2662                           ;I2C.c: 89: return SSPBUF;
  2663  040B  0813               	movf	19,w	;volatile
  2664  040C  0008               	return
  2665  040D                     __end_of_I2C_Read_Byte:	
  2666  040D                     __ptext935:	
  2667 ;; =============== function _I2C_Write_Byte ends ============
  2668                           
  2669                           
  2670 ;; *************** function _I2C_Start *****************
  2671 ;; Defined at:
  2672 ;;		line 25 in file "I2C.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;		None               void
  2679 ;; Registers used:
  2680 ;;		None
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 60/0
  2684 ;;		Unchanged: FFF9F/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0
  2689 ;;      Totals:         0       0       0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_Read_Bytes_From_DS1307_RTC
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699  040D                     _I2C_Start:	
  2700                           
  2701                           ;I2C.c: 26: SEN = 1;
  2702                           
  2703                           ; Regs used in _I2C_Start: []
  2704  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2705  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2706  040F  1411               	bsf	17,0
  2707  0410                     l2224:	
  2708                           ;I2C.c: 27: while(!SSPIF);
  2709                           
  2710  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0411  1D8C               	btfss	12,3
  2712  0412  2C10               	goto	l2224
  2713                           
  2714                           ;I2C.c: 28: SSPIF = 0;
  2715  0413  118C               	bcf	12,3
  2716  0414  0008               	return
  2717  0415                     __end_of_I2C_Start:	
  2718  0415                     __ptext932:	
  2719 ;; =============== function _I2C_Read_Byte ends ============
  2720                           
  2721                           
  2722 ;; *************** function _I2C_ReStart *****************
  2723 ;; Defined at:
  2724 ;;		line 34 in file "I2C.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;		None
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;		None
  2729 ;; Return value:  Size  Location     Type
  2730 ;;		None               void
  2731 ;; Registers used:
  2732 ;;		None
  2733 ;; Tracked objects:
  2734 ;;		On entry : 60/20
  2735 ;;		On exit  : 60/0
  2736 ;;		Unchanged: FFF9F/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         0       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0
  2741 ;;      Totals:         0       0       0       0       0
  2742 ;;Total ram usage:        0 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; Hardware stack levels required when called:    1
  2745 ;; This function calls:
  2746 ;;		Nothing
  2747 ;; This function is called by:
  2748 ;;		_Read_Bytes_From_DS1307_RTC
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751  0415                     _I2C_ReStart:	
  2752                           
  2753                           ;I2C.c: 35: RSEN = 1;
  2754                           
  2755                           ; Regs used in _I2C_ReStart: []
  2756  0415  1491               	bsf	17,1
  2757  0416                     l2230:	
  2758                           ;I2C.c: 36: while(!SSPIF);
  2759                           
  2760  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0417  1D8C               	btfss	12,3
  2762  0418  2C16               	goto	l2230
  2763                           
  2764                           ;I2C.c: 37: SSPIF = 0;
  2765  0419  118C               	bcf	12,3
  2766  041A  0008               	return
  2767  041B                     __end_of_I2C_ReStart:	
  2768  041B                     __ptext929:	
  2769 ;; =============== function ___bmul ends ============
  2770                           
  2771                           
  2772 ;; *************** function _I2C_Send_ACK *****************
  2773 ;; Defined at:
  2774 ;;		line 53 in file "I2C.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		None
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 60/0
  2786 ;;		Unchanged: FFF9F/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_Read_Bytes_From_DS1307_RTC
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801  041B                     _I2C_Send_ACK:	
  2802                           
  2803                           ;I2C.c: 54: ACKDT = 0;
  2804                           
  2805                           ; Regs used in _I2C_Send_ACK: []
  2806  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2807  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2808  041D  1291               	bcf	17,5
  2809                           
  2810                           ;I2C.c: 55: ACKEN = 1;
  2811  041E  1611               	bsf	17,4
  2812  041F                     l2242:	
  2813                           ;I2C.c: 56: while(!SSPIF);
  2814                           
  2815  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0420  1D8C               	btfss	12,3
  2817  0421  2C1F               	goto	l2242
  2818                           
  2819                           ;I2C.c: 57: SSPIF = 0;
  2820  0422  118C               	bcf	12,3
  2821  0423  0008               	return
  2822  0424                     __end_of_I2C_Send_ACK:	
  2823  0424                     __ptext933:	
  2824 ;; =============== function _I2C_ReStart ends ============
  2825                           
  2826                           
  2827 ;; *************** function _I2C_Stop *****************
  2828 ;; Defined at:
  2829 ;;		line 43 in file "I2C.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;		None               void
  2836 ;; Registers used:
  2837 ;;		None
  2838 ;; Tracked objects:
  2839 ;;		On entry : 160/0
  2840 ;;		On exit  : 160/0
  2841 ;;		Unchanged: FFE9F/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2843 ;;      Params:         0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0
  2846 ;;      Totals:         0       0       0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_Read_Bytes_From_DS1307_RTC
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856  0424                     _I2C_Stop:	
  2857  0424                     l5075:	
  2858                           ; Regs used in _I2C_Stop: []
  2859                           
  2860                           
  2861                           ;I2C.c: 44: PEN = 1;
  2862  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0425  1511               	bsf	17,2
  2864  0426                     l2236:	
  2865                           ;I2C.c: 45: while(!SSPIF);
  2866                           
  2867  0426  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0427  1D8C               	btfss	12,3
  2869  0428  2C26               	goto	l2236
  2870                           
  2871                           ;I2C.c: 46: SSPIF = 0;
  2872  0429  118C               	bcf	12,3
  2873  042A  0008               	return
  2874  042B                     __end_of_I2C_Stop:	
  2875  042B                     __ptext930:	
  2876 ;; =============== function _I2C_Send_ACK ends ============
  2877                           
  2878                           
  2879 ;; *************** function _I2C_Send_NACK *****************
  2880 ;; Defined at:
  2881 ;;		line 63 in file "I2C.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		None
  2890 ;; Tracked objects:
  2891 ;;		On entry : 160/0
  2892 ;;		On exit  : 160/0
  2893 ;;		Unchanged: FFE9F/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_Read_Bytes_From_DS1307_RTC
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908  042B                     _I2C_Send_NACK:	
  2909                           
  2910                           ;I2C.c: 64: ACKDT = 1;
  2911                           
  2912                           ; Regs used in _I2C_Send_NACK: []
  2913  042B  1683               	bsf	3,5	;RP0=1, select bank1
  2914  042C  1691               	bsf	17,5
  2915                           
  2916                           ;I2C.c: 65: ACKEN = 1;
  2917  042D  1611               	bsf	17,4
  2918  042E                     l2248:	
  2919                           ;I2C.c: 66: while(!SSPIF);
  2920                           
  2921  042E  1283               	bcf	3,5	;RP0=0, select bank0
  2922  042F  1D8C               	btfss	12,3
  2923  0430  2C2E               	goto	l2248
  2924                           
  2925                           ;I2C.c: 67: SSPIF = 0;
  2926  0431  118C               	bcf	12,3
  2927  0432  0008               	return
  2928  0433                     __end_of_I2C_Send_NACK:	
  2929  0433                     PL3:	
  2930  0433  085B               	movf	_pRTCArray+2,w
  2931  0434  00FB               	movwf	_Temp
  2932  0435  300A               	movlw	10
  2933  0436  00F2               	movwf	?___bmul
  2934  0437  0E7B               	swapf	_Temp,w
  2935  0438  390F               	andlw	15
  2936  0439  0008               	return
  2937  043A                     PL8:	
  2938  043A  00FB               	movwf	_Temp
  2939  043B  300A               	movlw	10
  2940  043C  00F2               	movwf	?___bmul
  2941  043D  0E7B               	swapf	_Temp,w
  2942  043E  390F               	andlw	15
  2943  043F  0008               	return
  2944                           
  2945                           	psect	text922
  2946  05D7                     __ptext922:	
  2947 ;; =============== function _Read_Bytes_From_DS1307_RTC ends ============
  2948                           
  2949                           
  2950 ;; *************** function _InitI2C *****************
  2951 ;; Defined at:
  2952 ;;		line 8 in file "I2C.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;		None
  2957 ;; Return value:  Size  Location     Type
  2958 ;;		None               void
  2959 ;; Registers used:
  2960 ;;		wreg
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/20
  2963 ;;		On exit  : 60/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       0       0       0       0
  2968 ;;      Temps:          3       0       0       0       0
  2969 ;;      Totals:         3       0       0       0       0
  2970 ;;Total ram usage:        3 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979  05D7                     _InitI2C:	
  2980                           
  2981                           ;I2C.c: 11: _delay((unsigned long)((500)*(20000000/4000.0)));
  2982                           
  2983                           ; Regs used in _InitI2C: [wreg]
  2984  05D7  300D               	movlw	13
  2985  05D8  00F4               	movwf	??_InitI2C+2
  2986  05D9  30AF               	movlw	175
  2987  05DA  00F3               	movwf	??_InitI2C+1
  2988  05DB  30C1               	movlw	193
  2989  05DC  00F2               	movwf	??_InitI2C
  2990  05DD                     u1107:	
  2991  05DD  0BF2               	decfsz	??_InitI2C,f
  2992  05DE  2DDD               	goto	u1107
  2993  05DF  0BF3               	decfsz	??_InitI2C+1,f
  2994  05E0  2DDD               	goto	u1107
  2995  05E1  0BF4               	decfsz	??_InitI2C+2,f
  2996  05E2  2DDD               	goto	u1107
  2997  05E3  0064               	clrwdt
  2998                           
  2999                           ;I2C.c: 12: TRISC4 = 1;
  3000  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  3001  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  3002  05E6  3031               	movlw	49
  3003  05E7  1607               	bsf	7,4
  3004  05E8  1587               	bsf	7,3
  3005                           
  3006                           ;I2C.c: 15: SSPADD = ((20000000/4000)/100) - 1;
  3007  05E9  0093               	movwf	19	;volatile
  3008                           
  3009                           ;I2C.c: 16: SSPSTAT = 0x80;
  3010  05EA  3080               	movlw	128
  3011  05EB  0094               	movwf	20	;volatile
  3012                           
  3013                           ;I2C.c: 17: SSPCON = 0x28;
  3014  05EC  3028               	movlw	40
  3015  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3016  05EE  0094               	movwf	20	;volatile
  3017  05EF  0008               	return
  3018  05F0                     __end_of_InitI2C:	
  3019                           
  3020                           	psect	text923
  3021  05B1                     __ptext923:	
  3022 ;; =============== function _InitI2C ends ============
  3023                           
  3024                           
  3025 ;; *************** function _UART_Write_Text *****************
  3026 ;; Defined at:
  3027 ;;		line 33 in file "uart.h"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  text            1    wreg     PTR unsigned char 
  3030 ;;		 -> STR_2(29), STR_1(24), 
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;  text            1    3[COMMON] PTR unsigned char 
  3033 ;;		 -> STR_2(29), STR_1(24), 
  3034 ;;  i               2    4[COMMON] int 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;		None               void
  3037 ;; Registers used:
  3038 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: FFF9F/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         3       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         3       0       0       0       0
  3048 ;;Total ram usage:        3 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    2
  3051 ;; This function calls:
  3052 ;;		_UART_Write
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057  05B1                     _UART_Write_Text:	
  3058                           
  3059                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3060                           ;UART_Write_Text@text stored from wreg
  3061  05B1  00F3               	movwf	UART_Write_Text@text
  3062                           
  3063                           ;uart.h: 34: int i;
  3064                           ;uart.h: 35: for(i=0;text[i]!='\0';i++)
  3065  05B2  01F4               	clrf	UART_Write_Text@i
  3066  05B3  01F5               	clrf	UART_Write_Text@i+1
  3067  05B4                     l5219:	
  3068  05B4  0874               	movf	UART_Write_Text@i,w
  3069  05B5  0773               	addwf	UART_Write_Text@text,w
  3070  05B6  0084               	movwf	4
  3071  05B7  120A  118A  250C   	fcall	stringdir
      +       120A  118A         
  3072  05BC  3800               	iorlw	0
  3073  05BD  1903               	btfsc	3,2
  3074  05BE  0008               	return
  3075                           
  3076                           ;uart.h: 36: UART_Write(text[i]);
  3077  05BF  0874               	movf	UART_Write_Text@i,w
  3078  05C0  0773               	addwf	UART_Write_Text@text,w
  3079  05C1  0084               	movwf	4
  3080  05C2  120A  118A  250C   	fcall	stringdir
      +       120A  118A         
  3081  05C7  25CE  120A  118A   	fcall	_UART_Write
  3082  05CA  0AF4               	incf	UART_Write_Text@i,f
  3083  05CB  1903               	skipnz
  3084  05CC  0AF5               	incf	UART_Write_Text@i+1,f
  3085  05CD  2DB4               	goto	l5219
  3086  05CE                     __end_of_UART_Write_Text:	
  3087  05CE                     __ptext936:	
  3088 ;; =============== function _I2C_Start ends ============
  3089                           
  3090                           
  3091 ;; *************** function _UART_Write *****************
  3092 ;; Defined at:
  3093 ;;		line 24 in file "uart.h"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  data            1    wreg     unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  data            1    2[COMMON] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;		None               void
  3100 ;; Registers used:
  3101 ;;		wreg
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 60/0
  3105 ;;		Unchanged: FFF9F/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       0       0       0       0
  3108 ;;      Locals:         1       0       0       0       0
  3109 ;;      Temps:          0       0       0       0       0
  3110 ;;      Totals:         1       0       0       0       0
  3111 ;;Total ram usage:        1 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    1
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_UART_Write_Text
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121  05CE                     _UART_Write:	
  3122                           
  3123                           ; Regs used in _UART_Write: [wreg]
  3124                           ;UART_Write@data stored from wreg
  3125  05CE  00F2               	movwf	UART_Write@data
  3126  05CF                     l746:	
  3127                           ;uart.h: 25: while(!TRMT);
  3128                           
  3129  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  3130  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  3131  05D1  1C98               	btfss	24,1
  3132  05D2  2DCF               	goto	l746
  3133                           
  3134                           ;uart.h: 26: TXREG = data;
  3135  05D3  0872               	movf	UART_Write@data,w
  3136  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3137  05D5  0099               	movwf	25	;volatile
  3138  05D6  0008               	return
  3139  05D7                     __end_of_UART_Write:	
  3140                           
  3141                           	psect	text924
  3142  0233                     __ptext924:	
  3143 ;; =============== function _UART_Write_Text ends ============
  3144                           
  3145                           
  3146 ;; *************** function _UART_Init *****************
  3147 ;; Defined at:
  3148 ;;		line 2 in file "uart.h"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  baudrate        4    6[BANK0 ] const long 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  x               2   19[BANK0 ] unsigned int 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      unsigned char 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, pclath, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 60/0
  3159 ;;		On exit  : 40/0
  3160 ;;		Unchanged: FFF9F/0
  3161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3162 ;;      Params:         0       4       0       0       0
  3163 ;;      Locals:         0       2       0       0       0
  3164 ;;      Temps:          0       9       0       0       0
  3165 ;;      Totals:         0      15       0       0       0
  3166 ;;Total ram usage:       15 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    2
  3169 ;; This function calls:
  3170 ;;		___aldiv
  3171 ;; This function is called by:
  3172 ;;		_main
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175  0233                     _UART_Init:	
  3176                           
  3177                           ;uart.h: 3: unsigned int x;
  3178                           ;uart.h: 4: x = (20000000 - baudrate*64)/(baudrate*64);
  3179                           
  3180                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  3181  0233  0845               	movf	UART_Init@baudrate+3,w
  3182  0234  2325  120A  118A   	fcall	PL6	;call to abstracted procedure
  3183  0237  3006               	movlw	6
  3184  0238  00C6               	movwf	??_UART_Init
  3185  0239                     u945:	
  3186  0239  233C  120A  118A   	fcall	PL11	;call to abstracted procedure
  3187  023C  0BC6               	decfsz	??_UART_Init,f
  3188  023D  2A39               	goto	u945
  3189  023E  0842               	movf	UART_Init@baudrate,w
  3190  023F  232D  120A  118A   	fcall	PL7	;call to abstracted procedure
  3191  0242  3006               	movlw	6
  3192  0243                     u955:	
  3193  0243  2335  120A  118A   	fcall	PL9	;call to abstracted procedure
  3194  0246  1D03               	skipz
  3195  0247  2A43               	goto	u955
  3196  0248  3000               	movlw	0
  3197  0249  2307  120A  118A   	fcall	PL2	;call to abstracted procedure
  3198  024C  2292  120A  118A   	fcall	___aldiv
  3199  024F  0873               	movf	?___aldiv+1,w
  3200  0250  00D0               	movwf	UART_Init@x+1
  3201  0251  0872               	movf	?___aldiv,w
  3202  0252  00CF               	movwf	UART_Init@x
  3203                           
  3204                           ;uart.h: 5: if(x>255)
  3205  0253  3001               	movlw	1
  3206  0254  0250               	subwf	UART_Init@x+1,w
  3207  0255  3000               	movlw	0
  3208  0256  1903               	skipnz
  3209  0257  024F               	subwf	UART_Init@x,w
  3210  0258  1C03               	skipc
  3211  0259  2A7C               	goto	l5543
  3212                           
  3213                           ;uart.h: 6: {
  3214                           ;uart.h: 7: x = (20000000 - baudrate*16)/(baudrate*16);
  3215  025A  0845               	movf	UART_Init@baudrate+3,w
  3216  025B  2325  120A  118A   	fcall	PL6	;call to abstracted procedure
  3217  025E  3004               	movlw	4
  3218  025F  00C6               	movwf	??_UART_Init
  3219  0260                     u985:	
  3220  0260  233C  120A  118A   	fcall	PL11	;call to abstracted procedure
  3221  0263  0BC6               	decfsz	??_UART_Init,f
  3222  0264  2A60               	goto	u985
  3223  0265  0842               	movf	UART_Init@baudrate,w
  3224  0266  232D  120A  118A   	fcall	PL7	;call to abstracted procedure
  3225  0269  3004               	movlw	4
  3226  026A                     u995:	
  3227  026A  2335  120A  118A   	fcall	PL9	;call to abstracted procedure
  3228  026D  1D03               	skipz
  3229  026E  2A6A               	goto	u995
  3230  026F  3000               	movlw	0
  3231  0270  2307  120A  118A   	fcall	PL2	;call to abstracted procedure
  3232  0273  2292  120A  118A   	fcall	___aldiv
  3233  0276  0873               	movf	?___aldiv+1,w
  3234  0277  00D0               	movwf	UART_Init@x+1
  3235  0278  0872               	movf	?___aldiv,w
  3236  0279  00CF               	movwf	UART_Init@x
  3237                           
  3238                           ;uart.h: 8: BRGH = 1;
  3239  027A  1683               	bsf	3,5	;RP0=1, select bank1
  3240  027B  1518               	bsf	24,2
  3241  027C                     l5543:	
  3242                           
  3243                           ;uart.h: 9: }
  3244                           ;uart.h: 10: if(x<256)
  3245  027C  3001               	movlw	1
  3246  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3247  027E  0250               	subwf	UART_Init@x+1,w
  3248  027F  3000               	movlw	0
  3249  0280  1903               	skipnz
  3250  0281  024F               	subwf	UART_Init@x,w
  3251  0282  1803               	skipnc
  3252  0283  0008               	return
  3253                           
  3254                           ;uart.h: 11: {
  3255                           ;uart.h: 12: SPBRG = x;
  3256  0284  084F               	movf	UART_Init@x,w
  3257  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3258  0286  0099               	movwf	25	;volatile
  3259                           
  3260                           ;uart.h: 13: SYNC = 0;
  3261  0287  1218               	bcf	24,4
  3262                           
  3263                           ;uart.h: 14: SPEN = 1;
  3264  0288  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0289  1798               	bsf	24,7
  3266                           
  3267                           ;uart.h: 15: TRISC7 = 1;
  3268  028A  1683               	bsf	3,5	;RP0=1, select bank1
  3269  028B  1787               	bsf	7,7
  3270                           
  3271                           ;uart.h: 16: TRISC6 = 1;
  3272  028C  1707               	bsf	7,6
  3273                           
  3274                           ;uart.h: 17: CREN = 1;
  3275  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3276  028E  1618               	bsf	24,4
  3277                           
  3278                           ;uart.h: 18: TXEN = 1;
  3279  028F  1683               	bsf	3,5	;RP0=1, select bank1
  3280  0290  1698               	bsf	24,5
  3281  0291  0008               	return
  3282  0292                     __end_of_UART_Init:	
  3283  0292                     __ptext925:	
  3284 ;; =============== function _UART_Init ends ============
  3285                           
  3286                           
  3287 ;; *************** function ___aldiv *****************
  3288 ;; Defined at:
  3289 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\aldiv.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;  divisor         4    2[COMMON] long 
  3292 ;;  dividend        4    6[COMMON] long 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;  quotient        4    2[BANK0 ] long 
  3295 ;;  sign            1    1[BANK0 ] unsigned char 
  3296 ;;  counter         1    0[BANK0 ] unsigned char 
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  4    2[COMMON] long 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 60/0
  3303 ;;		On exit  : 60/0
  3304 ;;		Unchanged: FFF9F/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3306 ;;      Params:         8       0       0       0       0
  3307 ;;      Locals:         0       6       0       0       0
  3308 ;;      Temps:          0       0       0       0       0
  3309 ;;      Totals:         8       6       0       0       0
  3310 ;;Total ram usage:       14 bytes
  3311 ;; Hardware stack levels used:    1
  3312 ;; Hardware stack levels required when called:    1
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_UART_Init
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319  0292                     ___aldiv:	
  3320                           
  3321                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3322  0292  01BD               	clrf	___aldiv@sign
  3323  0293  1FF5               	btfss	___aldiv@divisor+3,7
  3324  0294  2AA2               	goto	l3866
  3325  0295  09F2               	comf	___aldiv@divisor,f
  3326  0296  09F3               	comf	___aldiv@divisor+1,f
  3327  0297  09F4               	comf	___aldiv@divisor+2,f
  3328  0298  09F5               	comf	___aldiv@divisor+3,f
  3329  0299  0AF2               	incf	___aldiv@divisor,f
  3330  029A  1903               	skipnz
  3331  029B  0AF3               	incf	___aldiv@divisor+1,f
  3332  029C  1903               	skipnz
  3333  029D  0AF4               	incf	___aldiv@divisor+2,f
  3334  029E  1903               	skipnz
  3335  029F  0AF5               	incf	___aldiv@divisor+3,f
  3336  02A0  01BD               	clrf	___aldiv@sign
  3337  02A1  0ABD               	incf	___aldiv@sign,f
  3338  02A2                     l3866:	
  3339  02A2  1FF9               	btfss	___aldiv@dividend+3,7
  3340  02A3  2AB1               	goto	l5505
  3341  02A4  09F6               	comf	___aldiv@dividend,f
  3342  02A5  09F7               	comf	___aldiv@dividend+1,f
  3343  02A6  09F8               	comf	___aldiv@dividend+2,f
  3344  02A7  09F9               	comf	___aldiv@dividend+3,f
  3345  02A8  0AF6               	incf	___aldiv@dividend,f
  3346  02A9  1903               	skipnz
  3347  02AA  0AF7               	incf	___aldiv@dividend+1,f
  3348  02AB  1903               	skipnz
  3349  02AC  0AF8               	incf	___aldiv@dividend+2,f
  3350  02AD  1903               	skipnz
  3351  02AE  0AF9               	incf	___aldiv@dividend+3,f
  3352  02AF  3001               	movlw	1
  3353  02B0  06BD               	xorwf	___aldiv@sign,f
  3354  02B1                     l5505:	
  3355  02B1  01BE               	clrf	___aldiv@quotient
  3356  02B2  01BF               	clrf	___aldiv@quotient+1
  3357  02B3  01C0               	clrf	___aldiv@quotient+2
  3358  02B4  01C1               	clrf	___aldiv@quotient+3
  3359  02B5  0875               	movf	___aldiv@divisor+3,w
  3360  02B6  0474               	iorwf	___aldiv@divisor+2,w
  3361  02B7  0473               	iorwf	___aldiv@divisor+1,w
  3362  02B8  0472               	iorwf	___aldiv@divisor,w
  3363  02B9  1903               	skipnz
  3364  02BA  2AF0               	goto	l5527
  3365  02BB  01BC               	clrf	___aldiv@counter
  3366  02BC                     L1:	
  3367  02BC  0ABC               	incf	___aldiv@counter,f
  3368  02BD  1BF5               	btfsc	___aldiv@divisor+3,7
  3369  02BE  2AC5               	goto	l5515
  3370  02BF  1003               	clrc
  3371  02C0  0DF2               	rlf	___aldiv@divisor,f
  3372  02C1  0DF3               	rlf	___aldiv@divisor+1,f
  3373  02C2  0DF4               	rlf	___aldiv@divisor+2,f
  3374  02C3  0DF5               	rlf	___aldiv@divisor+3,f
  3375  02C4  2ABC               	goto	L1
  3376  02C5                     l5515:	
  3377  02C5  1003               	clrc
  3378  02C6  0DBE               	rlf	___aldiv@quotient,f
  3379  02C7  0DBF               	rlf	___aldiv@quotient+1,f
  3380  02C8  0DC0               	rlf	___aldiv@quotient+2,f
  3381  02C9  0DC1               	rlf	___aldiv@quotient+3,f
  3382  02CA  0875               	movf	___aldiv@divisor+3,w
  3383  02CB  0279               	subwf	___aldiv@dividend+3,w
  3384  02CC  1D03               	skipz
  3385  02CD  2AD8               	goto	u915
  3386  02CE  0874               	movf	___aldiv@divisor+2,w
  3387  02CF  0278               	subwf	___aldiv@dividend+2,w
  3388  02D0  1D03               	skipz
  3389  02D1  2AD8               	goto	u915
  3390  02D2  0873               	movf	___aldiv@divisor+1,w
  3391  02D3  0277               	subwf	___aldiv@dividend+1,w
  3392  02D4  1D03               	skipz
  3393  02D5  2AD8               	goto	u915
  3394  02D6  0872               	movf	___aldiv@divisor,w
  3395  02D7  0276               	subwf	___aldiv@dividend,w
  3396  02D8                     u915:	
  3397  02D8  1C03               	skipc
  3398  02D9  2AEA               	goto	L2
  3399  02DA  0872               	movf	___aldiv@divisor,w
  3400  02DB  02F6               	subwf	___aldiv@dividend,f
  3401  02DC  0873               	movf	___aldiv@divisor+1,w
  3402  02DD  1C03               	skipc
  3403  02DE  0F73               	incfsz	___aldiv@divisor+1,w
  3404  02DF  02F7               	subwf	___aldiv@dividend+1,f
  3405  02E0  0874               	movf	___aldiv@divisor+2,w
  3406  02E1  1C03               	skipc
  3407  02E2  0F74               	incfsz	___aldiv@divisor+2,w
  3408  02E3  02F8               	subwf	___aldiv@dividend+2,f
  3409  02E4  0875               	movf	___aldiv@divisor+3,w
  3410  02E5  1C03               	skipc
  3411  02E6  0F75               	incfsz	___aldiv@divisor+3,w
  3412  02E7  02F9               	subwf	___aldiv@dividend+3,f
  3413  02E8  143E               	bsf	___aldiv@quotient,0
  3414  02E9  1003               	clrc
  3415  02EA                     L2:	
  3416  02EA  0CF5               	rrf	___aldiv@divisor+3,f
  3417  02EB  0CF4               	rrf	___aldiv@divisor+2,f
  3418  02EC  0CF3               	rrf	___aldiv@divisor+1,f
  3419  02ED  0CF2               	rrf	___aldiv@divisor,f
  3420  02EE  0BBC               	decfsz	___aldiv@counter,f
  3421  02EF  2AC5               	goto	l5515
  3422  02F0                     l5527:	
  3423  02F0  083D               	movf	___aldiv@sign,w
  3424  02F1  1903               	btfsc	3,2
  3425  02F2  2AFE               	goto	l5531
  3426  02F3  09BE               	comf	___aldiv@quotient,f
  3427  02F4  09BF               	comf	___aldiv@quotient+1,f
  3428  02F5  09C0               	comf	___aldiv@quotient+2,f
  3429  02F6  09C1               	comf	___aldiv@quotient+3,f
  3430  02F7  0ABE               	incf	___aldiv@quotient,f
  3431  02F8  1903               	skipnz
  3432  02F9  0ABF               	incf	___aldiv@quotient+1,f
  3433  02FA  1903               	skipnz
  3434  02FB  0AC0               	incf	___aldiv@quotient+2,f
  3435  02FC  1903               	skipnz
  3436  02FD  0AC1               	incf	___aldiv@quotient+3,f
  3437  02FE                     l5531:	
  3438  02FE  0841               	movf	___aldiv@quotient+3,w
  3439  02FF  00F5               	movwf	?___aldiv+3
  3440  0300  0840               	movf	___aldiv@quotient+2,w
  3441  0301  00F4               	movwf	?___aldiv+2
  3442  0302  083F               	movf	___aldiv@quotient+1,w
  3443  0303  00F3               	movwf	?___aldiv+1
  3444  0304  083E               	movf	___aldiv@quotient,w
  3445  0305  00F2               	movwf	?___aldiv
  3446  0306  0008               	return
  3447  0307                     __end_of___aldiv:	
  3448  0307                     PL2:	
  3449  0307  00CB               	movwf	??_UART_Init+5
  3450  0308  302D               	movlw	45
  3451  0309  00CC               	movwf	??_UART_Init+6
  3452  030A  3031               	movlw	49
  3453  030B  00CD               	movwf	??_UART_Init+7
  3454  030C  3001               	movlw	1
  3455  030D  00CE               	movwf	??_UART_Init+8
  3456  030E  0847               	movf	??_UART_Init+1,w
  3457  030F  02CB               	subwf	??_UART_Init+5,f
  3458  0310  0848               	movf	??_UART_Init+2,w
  3459  0311  1C03               	skipc
  3460  0312  0F48               	incfsz	??_UART_Init+2,w
  3461  0313  02CC               	subwf	??_UART_Init+6,f
  3462  0314  0849               	movf	??_UART_Init+3,w
  3463  0315  1C03               	skipc
  3464  0316  0F49               	incfsz	??_UART_Init+3,w
  3465  0317  02CD               	subwf	??_UART_Init+7,f
  3466  0318  084A               	movf	??_UART_Init+4,w
  3467  0319  1C03               	skipc
  3468  031A  0F4A               	incfsz	??_UART_Init+4,w
  3469  031B  02CE               	subwf	??_UART_Init+8,f
  3470  031C  084E               	movf	??_UART_Init+8,w
  3471  031D  00F9               	movwf	?___aldiv+7
  3472  031E  084D               	movf	??_UART_Init+7,w
  3473  031F  00F8               	movwf	?___aldiv+6
  3474  0320  084C               	movf	??_UART_Init+6,w
  3475  0321  00F7               	movwf	?___aldiv+5
  3476  0322  084B               	movf	??_UART_Init+5,w
  3477  0323  00F6               	movwf	?___aldiv+4
  3478  0324  0008               	return
  3479  0325                     PL6:	
  3480  0325  00F5               	movwf	?___aldiv+3
  3481  0326  0844               	movf	UART_Init@baudrate+2,w
  3482  0327  00F4               	movwf	?___aldiv+2
  3483  0328  0843               	movf	UART_Init@baudrate+1,w
  3484  0329  00F3               	movwf	?___aldiv+1
  3485  032A  0842               	movf	UART_Init@baudrate,w
  3486  032B  00F2               	movwf	?___aldiv
  3487  032C  0008               	return
  3488  032D                     PL7:	
  3489  032D  00C7               	movwf	??_UART_Init+1
  3490  032E  0843               	movf	UART_Init@baudrate+1,w
  3491  032F  00C8               	movwf	??_UART_Init+2
  3492  0330  0844               	movf	UART_Init@baudrate+2,w
  3493  0331  00C9               	movwf	??_UART_Init+3
  3494  0332  0845               	movf	UART_Init@baudrate+3,w
  3495  0333  00CA               	movwf	??_UART_Init+4
  3496  0334  0008               	return
  3497  0335                     PL9:	
  3498  0335  1003               	clrc
  3499  0336  0DC7               	rlf	??_UART_Init+1,f
  3500  0337  0DC8               	rlf	??_UART_Init+2,f
  3501  0338  0DC9               	rlf	??_UART_Init+3,f
  3502  0339  0DCA               	rlf	??_UART_Init+4,f
  3503  033A  3EFF               	addlw	-1
  3504  033B  0008               	return
  3505  033C                     PL11:	
  3506  033C  1003               	clrc
  3507  033D  0DF2               	rlf	?___aldiv,f
  3508  033E  0DF3               	rlf	?___aldiv+1,f
  3509  033F  0DF4               	rlf	?___aldiv+2,f
  3510  0340  0DF5               	rlf	?___aldiv+3,f
  3511  0341  0008               	return
  3512                           
  3513                           	psect	text937
  3514  05F0                     __ptext937:	
  3515 ;; =============== function _UART_Write ends ============
  3516                           
  3517                           
  3518 ;; *************** function _isr *****************
  3519 ;; Defined at:
  3520 ;;		line 40 in file "energymeter_lcd_rtc.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;		None
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;		None
  3525 ;; Return value:  Size  Location     Type
  3526 ;;		None               void
  3527 ;; Registers used:
  3528 ;;		wreg, status,2, status,0
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 60/0
  3532 ;;		Unchanged: FFF9F/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         0       0       0       0       0
  3535 ;;      Locals:         0       0       0       0       0
  3536 ;;      Temps:          2       0       0       0       0
  3537 ;;      Totals:         2       0       0       0       0
  3538 ;;Total ram usage:        2 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; This function calls:
  3541 ;;		Nothing
  3542 ;; This function is called by:
  3543 ;;		Interrupt level 1
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546  05F0                     _isr:	
  3547                           
  3548                           ;energymeter_lcd_rtc.c: 41: if(RBIF==1 && RB4==1)
  3549  05F0  1C0B               	btfss	11,0
  3550  05F1  2DF9               	goto	i1l5061
  3551  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  3552  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  3553  05F4  1E06               	btfss	6,4
  3554  05F5  2DF9               	goto	i1l5061
  3555                           
  3556                           ;energymeter_lcd_rtc.c: 42: count++;
  3557  05F6  0AD4               	incf	_count,f
  3558  05F7  1903               	skipnz
  3559  05F8  0AD5               	incf	_count+1,f
  3560  05F9                     i1l5061:	
  3561                           
  3562                           ;energymeter_lcd_rtc.c: 43: trsh=PORTB;
  3563  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3564  05FA  1303               	bcf	3,6	;RP1=0, select bank0
  3565  05FB  0806               	movf	6,w	;volatile
  3566                           
  3567                           ;energymeter_lcd_rtc.c: 44: RBIF=0;
  3568  05FC  100B               	bcf	11,0
  3569  05FD  0871               	movf	??_isr+1,w
  3570  05FE  008A               	movwf	10
  3571  05FF  0E70               	swapf	??_isr^(0+-128),w
  3572  0600  0083               	movwf	3
  3573  0601  0EFE               	swapf	126,f
  3574  0602  0E7E               	swapf	126,w
  3575  0603  0009               	retfie
  3576  0604                     __end_of_isr:	
  3577                           
  3578                           	psect	intentry
  3579  0004                     __pintentry:	
  3580                           ; Regs used in _isr: [wreg+status,2+status,0]
  3581                           
  3582  0004                     interrupt_function:	
  3583  007E                     saved_w	set	btemp
  3584  0004  00FE               	movwf	btemp
  3585  0005  0E03               	swapf	3,w
  3586  0006  00F0               	movwf	??_isr
  3587  0007  080A               	movf	10,w
  3588  0008  00F1               	movwf	??_isr+1
  3589  0009  120A  118A  2DF0   	ljmp	_isr
  3590                           
  3591                           	psect	text938
  3592  0000                     __ptext938:	
  3593 ;; =============== function _isr ends ============
  3594                           
  3595  007E                     btemp	set	126	;btemp
  3596  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Nov 30 13:01:40 2015

                                  _a 0027                                    _b 0020  
                                  _i 0056                                    pc 0002  
                     ___bmul@product 0073                   __size_of_I2C_Start 0008  
                                 fsr 0004                                  l746 05CF  
                                l749 0000                                  l758 0000  
                                l784 04FD                                  _GIE 005F  
                                _RC1 0039                                  _RC2 003A  
                                _RB4 0034                                  _PEN 048A  
                                _SEN 0488                                  u805 03E1  
                                u915 02D8                                  u950 0000  
                                u945 0239                                  u955 0243  
                                u990 0000                                  u985 0260  
                                u995 026A                 __size_of_I2C_ReStart 0006  
                                _isr 05F0                                  fsr0 0004  
                                indf 0000                   I2C_Write_Byte@Byte 0072  
                               l2221 0000                                 l2230 0416  
                               l2224 0410                                 l2233 0000  
                               l1513 0000                                 l2242 041F  
                               l2227 0000                                 l2251 0000  
                               l2236 0426                                 l2260 0407  
                               l2245 0000                                 l2254 03FB  
                               l1534 0000                                 l2239 0000  
                               l2263 0000                                 l2248 042E  
                               l1528 0000                                 l5111 0181  
                               l5105 0000                                 l5051 0000  
                               l5123 0000                                 l5115 0000  
                               l5107 0000                                 l5131 0000  
                               l3701 0187                                 l5109 0000  
                               l5125 0194                                 l5141 01AE  
                               l5133 019A                                 l5213 0000  
                               l5221 0000                                 l5301 0000  
                               l3710 0000                                 l5071 0403  
                               l5119 0000                                 l5143 0000  
                               l5135 0000                                 l5223 0000  
                               l5231 0000                                 l5311 0000  
                               l5303 0000                                 l3704 0000  
                               l5065 0000                                 l5081 0000  
                               l5137 0000                                 l5129 0000  
                               l5217 0000                                 l5225 0000  
                               l5241 0000                                 l5233 0000  
                               l5313 0000                                 l5305 0000  
                               l5321 0000                                 l5401 0000  
                               l5067 0000                                 l5075 0424  
                               l5091 03B2                                 l5219 05B4  
                               l5243 0000                                 l5235 0000  
                               l5227 0000                                 l5251 0000  
                               l5307 0000                                 l5331 0000  
                               l5323 0000                                 l5411 0091  
                               l5403 0000                                 l5077 0000  
                               l5085 0000                                 l5245 03DB  
                               l5237 0000                                 l5229 0000  
                               l5253 0000                                 l5261 0000  
                               l5309 0000                                 l5333 0000  
                               l5325 0000                                 l5317 0000  
                               l5341 01B2                                 l5421 00AA  
                               l5413 0096                                 l5405 0000  
                               l2950 0000                                 l5079 0000  
                               l5087 0000                                 l5503 0000  
                               l5247 03F3                                 l5255 0000  
                               l5263 0000                                 l5271 0000  
                               l5335 0000                                 l5327 0000  
                               l5319 0000                                 l5351 0000  
                               l5423 00AF                                 l5415 009B  
                               l5407 0000                                 l5097 0000  
                               l5089 0000                                 l5521 0000  
                               l5505 02B1                                 l5249 01FB  
                               l2953 0000                                 l5257 0000  
                               l5265 0000                                 l5273 0000  
                               l5329 0000                                 l5337 0000  
                               l5345 0000                                 l5361 0000  
                               l5353 0000                                 l5425 00B4  
                               l5417 00A0                                 l5409 0000  
                               l5099 0000                                 l5531 02FE  
                               l5515 02C5                                 l5507 0000  
                               l5259 0000                                 l5291 0000  
                               l5283 0398                                 l5275 0000  
                               l5267 0000                                 l5339 0000  
                               l5347 01B4                                 l5371 0000  
                               l5363 0000                                 l5355 0000  
                               l5419 00A5                                 l5611 0000  
                               l5603 0000                                 l3668 0000  
                               l2956 0000                                 l5525 0000  
                               l5517 0000                                 l5541 0000  
                               l5293 0000                                 l5285 0399  
                               l5277 0000                                 l5269 0000  
                               l2965 0000                                 l5381 0000  
                               l5373 0000                                 l5365 0000  
                               l5357 0000                                 l5349 0000  
                               l5613 0000                                 l5605 0000  
                               l5527 02F0                                 l5551 0000  
                               l5543 027C                                 l5535 0000  
                               l5287 0000                                 l2959 0000  
                               l2975 0000                                 l5391 0166  
                               l5383 0000                                 l5375 0000  
                               l5367 0000                                 l5359 0000  
                               l5615 0000                                 l5607 0000  
                               l2968 0000                                 l5529 0000  
                               l5553 0000                                 l5537 0000  
                               l5289 03A4                                 l5393 0173  
                               l5385 0156                                 l5377 0000  
                               l5369 0000                                 l5617 0000  
                               l5609 0000                                 l5561 0000  
                               l3866 02A2                                 l5555 0000  
                               l5547 0000                                 l5299 0000  
                               l5387 015E                                 l5379 0000  
                               l5619 0000                                 l5571 0000  
                               l5563 0000                                 l3876 0000  
                               l5557 0000                                 l5549 0000  
                               l5397 0000                                 l5573 0000  
                               l5565 0000                                 l5495 0000  
                               l5399 0000                                 l5591 0483  
                               l5575 0000                                 l5567 0000  
                               l5497 0000                                 l5593 0000  
                               l5585 0467                                 l5577 0000  
                               l5569 0000                                 l5595 0000  
                               l5587 0000                                 l5579 0000  
                               ?_isr 0070                                 l5597 0000  
                               l5589 0000                                 l5599 0000  
                               STR_1 052F                                 STR_2 0512  
                               STR_3 0567                                 STR_4 056A  
                               STR_5 0557                                 STR_6 054F  
                               STR_7 054B                                 STR_8 0563  
                               STR_9 0553                                 _BRGH 04C2  
                               _CREN 00C4                                 u1025 0481  
                               u1107 05DD                                 u1057 04D5  
                               u1067 04F6                                 u1077 0017  
                               u1087 01FE                                 u1097 0204  
                               _RBIE 005B                                 _RBIF 0058  
                               _RCEN 048B                                 _SPEN 00C7  
                               _RSEN 0489                                 _TRMT 04C1  
                               _TXEN 04C5                                 _SYNC 04C4  
                               _Temp 007B                                 _main 0440  
                               btemp 007E                     __end_of_I2C_Stop 042B  
              __size_of_I2C_Send_ACK 0009                                 start 000C  
                  ___bmul@multiplier 0074                      __end_of_InitI2C 05F0  
                    __end_of_InitLCD 01F5              __end_of_UART_Write_Text 05CE  
                              ??_isr 0070                      __end_of___aldiv 0307  
                              ?_main 0070                                _ACKEN 048C  
                              _ACKDT 048D                      __end_of___lbdiv 0196  
                              STR_10 055F                                STR_11 055B  
                              STR_12 0547                      __end_of___lbmod 01B2  
                              i1l777 0000                                _SPBRG 0099  
                              _PORTB 0006                                _PORTD 0008  
                              _TRISB 0086                                _TRISD 0088  
                              _SSPIF 0063                                _TXREG 0019  
 __end_of_Read_Bytes_From_DS1307_RTC 03F7           _Read_Bytes_From_DS1307_RTC 03BE  
                    __end_of_lcdData 017B                          ?_UART_Write 0070  
                 __size_of_UART_Init 005F               __size_of_I2C_Read_Byte 0008  
                              _count 0054                         _I2C_Send_ACK 041B  
                  __end_of_I2C_Start 0415                                pclath 000A  
                     lcdData@dataout 0073               __size_of_I2C_Send_NACK 0008  
                              status 0003                                wtemp0 007E  
                    ___lbdiv@divisor 0072                      ___lbdiv@counter 0074  
                    _ToggleEpinOfLCD 01FB                         __end_of_main 0502  
        __end_of_Get_DS1307_RTC_Date 036D          __end_of_Get_DS1307_RTC_Time 03B0  
                             ??_main 0051                               i1l5061 05F9  
                             i1l5063 0000                               i1l5055 0000  
                             _SSPADD 0093                               _TRISC1 0439  
                             _TRISC2 043A                               _TRISC3 043B  
                             _TRISC4 043C                               _TRISC6 043E  
                             _TRISC7 043F                               _SSPCON 0014  
                             _SSPBUF 0013            __size_of_DisplayDateOnLCD 009C  
                          ??_InitI2C 0072                            ??_InitLCD 0074  
                  __end_of_UART_Init 0292                               ___bmul 03B0  
                      _I2C_Read_Byte 0405                  __size_of_UART_Write 0009  
                          ??___aldiv 007A                            ??___lbdiv 0073  
                          ??___lbmod 0073                     ?_UART_Write_Text 0070  
                             _lcdCmd 01F5                               _lcdClr 000F  
                          ??_lcdData 0073                        _I2C_Send_NACK 042B  
                          ?_I2C_Stop 0070                               saved_w 007E  
                   ___lbdiv@dividend 0073              __end_of_ToggleEpinOfLCD 0207  
                    ___lbmod@divisor 0072                      ___lbmod@counter 0075  
Read_Bytes_From_DS1307_RTC@NoOfBytes 0074                  ___bmul@multiplicand 0072  
          __size_of_DisplayTimeToLCD 00BC                       ?_I2C_Read_Byte 0070  
                     __pcstackCOMMON 0070                         __pidataBANK0 0000  
                     ?_I2C_Send_NACK 0070                     ___lbdiv@quotient 0075  
                         ??_I2C_Stop 0072                   __size_of_lcdString 0025  
                         __pbssBANK0 0054                           __pmaintext 0440  
                            ?___bmul 0072                              ?_lcdCmd 0070  
                            ?_lcdClr 0070                           __pintentry 0004  
            __size_of_I2C_Write_Byte 000E                              _ACKSTAT 048E  
                      ??_I2C_ReStart 0072          ?_Read_Bytes_From_DS1307_RTC 0073  
                       ??_UART_Write 0072                              _SSPSTAT 0094  
                   ?_ToggleEpinOfLCD 0070                     _DisplayDateOnLCD 001D  
                            _InitI2C 05D7                              _InitLCD 01D7  
                          _I2C_Start 040D                      ??_I2C_Read_Byte 0072  
                  __end_of_lcdString 01D7                              ___aldiv 0292  
                    __size_of___bmul 000E                      ??_I2C_Send_NACK 0072  
                            ___lbdiv 017B                              ___lbmod 0196  
                 __end_of_UART_Write 05D7                      __size_of_lcdCmd 0006  
                    __size_of_lcdClr 000E                              _lcdData 0175  
                       __size_of_isr 0014                     ___aldiv@dividend 0076  
                __end_of_I2C_ReStart 041B           DisplayDateOnLCD@pDateArray 0078  
               end_of_initialization 05AD                           ?_I2C_Start 0070  
                   _DisplayTimeToLCD 00B9                     ___aldiv@quotient 003E  
                          _UART_Init 0233                       UART_Write@data 0072  
                   ___lbmod@dividend 0074         __size_of_Get_DS1307_RTC_Date 002B  
       __size_of_Get_DS1307_RTC_Time 0043                           lcdString@d 0074  
                         lcdString@i 0076                    __size_of_I2C_Stop 0007  
  Read_Bytes_From_DS1307_RTC@Address 0077                          ___lbmod@rem 0076  
__size_of_Read_Bytes_From_DS1307_RTC 0039                       __end_of___bmul 03BE  
                     _I2C_Write_Byte 03F7                           ?_UART_Init 0042  
                     __end_of_lcdCmd 01FB                       __end_of_lcdClr 001D  
                        _I2C_ReStart 0415             __size_of_UART_Write_Text 001D  
                start_initialization 056D                          __end_of_isr 0604  
            DisplayTimeToLCD@timeArr 003C                          ??_I2C_Start 0072  
             __end_of_I2C_Write_Byte 0405                             ??___bmul 0073  
                           ??_lcdCmd 0073                             ??_lcdClr 0074  
                        __pdataBANK0 0020          Read_Bytes_From_DS1307_RTC@i 0078  
           __end_of_DisplayDateOnLCD 00B9                            _pRTCArray 0059  
                        __pbssCOMMON 007B                        __pcstackBANK0 003C  
                      ?_I2C_Send_ACK 0070                             ?_InitI2C 0070  
                           ?_InitLCD 0070                      ?_I2C_Write_Byte 0070  
         DisplayTimeToLCD@pTimeArray 0044                             ?___aldiv 0072  
                           ?___lbdiv 0072                             ?___lbmod 0072  
                          __ptext911 001D                            __ptext920 01FB  
                          __ptext912 00B9                            __ptext921 03BE  
                          __ptext913 01B2                            __ptext930 042B  
                          __ptext922 05D7                            __ptext914 000F  
                          __ptext931 0405                            __ptext923 05B1  
                          __ptext915 01D7                            __ptext932 0415  
                          __ptext924 0233                            __ptext916 0342  
                          __ptext933 0424                            __ptext925 0292  
                          __ptext917 036D                            __ptext934 03F7  
                          __ptext926 0196                            __ptext918 0175  
                          __ptext935 040D                            __ptext927 017B  
                          __ptext919 01F5                            __ptext936 05CE  
                          __ptext928 03B0                            __ptext937 05F0  
                          __ptext929 041B                            __ptext938 0000  
                          _lcdString 01B2                          ??_UART_Init 0046  
                           ?_lcdData 0070                            __pstrings 0502  
                           _I2C_Stop 0424             __end_of_DisplayTimeToLCD 0175  
                     ??_I2C_Send_ACK 0072                           UART_Init@x 004F  
                  ??_UART_Write_Text 0073                      ___aldiv@divisor 0072  
                  interrupt_function 0004                      ___aldiv@counter 003C  
                _Get_DS1307_RTC_Date 0342                  _Get_DS1307_RTC_Time 036D  
              __end_of_I2C_Read_Byte 040D             __size_of_ToggleEpinOfLCD 000C  
    Read_Bytes_From_DS1307_RTC@pData 0073                           ?_lcdString 0074  
              __end_of_I2C_Send_NACK 0433                    UART_Init@baudrate 0042  
                        __stringbase 0511                 ?_Get_DS1307_RTC_Date 0070  
               ?_Get_DS1307_RTC_Time 0070                         lcdCmd@cmdout 0073  
         DisplayTimeToLCD@timeArrPtr 0043                     __size_of_InitI2C 0019  
                   __size_of_InitLCD 001E                     __size_of___aldiv 0075  
                   __size_of___lbdiv 001B                     __size_of___lbmod 001C  
                       ?_I2C_ReStart 0070                     __size_of_lcdData 0006  
              ??_Get_DS1307_RTC_Date 007A                ??_Get_DS1307_RTC_Time 007A  
                           _count_ch 0058                  UART_Write_Text@text 0073  
                      __size_of_main 00C2                 __end_of_I2C_Send_ACK 0424  
                        ??_lcdString 0076                    ??_ToggleEpinOfLCD 0072  
                  ?_DisplayDateOnLCD 0070                   ??_DisplayDateOnLCD 0078  
       ??_Read_Bytes_From_DS1307_RTC 0076                             intlevel1 0000  
                   ??_I2C_Write_Byte 0072                            stringcode 050C  
                    _UART_Write_Text 05B1                             stringdir 050C  
                           stringtab 0502                         ___aldiv@sign 003D  
                         _UART_Write 05CE                    ?_DisplayTimeToLCD 0070  
                 ??_DisplayTimeToLCD 0078                     UART_Write_Text@i 0074  
